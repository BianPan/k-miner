["{\"ID\": \"v3.19:sys_accept:0\", \"date\": \"2017-04-06 15:49:52.749218\", \"text\": \"UAR_Leak 3: (possible)\\n\\nalso interesting: 'avc', the heap object the local variable 'prev' is finally added to, is never freed.\\n\\n UAR_Leak 3: (possible) same as Leak3\"}", "{\"ID\": \"v3.19:sys_accept:0\", \"date\": \"2017-04-06 15:49:52.749218\", \"text\": \"UAR_Leak 3: (possible)\\n\\nalso interesting: 'avc', the heap object the local variable 'prev' is finally added to, is never freed.\\n\\n UAR_Leak 3: (possible) same as Leak3\"}", "{\"ID\": \"v3.19:sys_accept:0\", \"date\": \"2017-04-06 15:49:52.749218\", \"text\": \"UAR_Leak 3: (possible)\\n\\nalso interesting: 'avc', the heap object the local variable 'prev' is finally added to, is never freed.\\n\\n UAR_Leak 3: (possible) same as Leak3\"}", "{\"ID\": \"v3.19:sys_accept:0\", \"date\": \"2017-04-06 15:49:52.749218\", \"text\": \"UAR_Leak 3: (possible)\\n\\nalso interesting: 'avc', the heap object the local variable 'prev' is finally added to, is never freed.\\n\\n UAR_Leak 3: (possible) same as Leak3\"}", "{\"ID\": \"v3.19:sys_accept:0\", \"date\": \"2017-04-06 15:49:52.749218\", \"text\": \"UAR_Leak 3: (possible)\\n\\nalso interesting: 'avc', the heap object the local variable 'prev' is finally added to, is never freed.\\n\\n UAR_Leak 3: (possible) same as Leak3\"}", "{\"ID\": \"v3.19:sys_accept:0\", \"date\": \"2017-04-06 15:49:52.749218\", \"text\": \"UAR_Leak 3: (possible)\\n\\nalso interesting: 'avc', the heap object the local variable 'prev' is finally added to, is never freed.\\n\\n UAR_Leak 3: (possible) same as Leak3\"}", "{\"ID\": \"v3.19:sys_accept:0\", \"date\": \"2017-04-06 15:49:52.749218\", \"text\": \"UAR_Leak 3: (possible)\\n\\nalso interesting: 'avc', the heap object the local variable 'prev' is finally added to, is never freed.\\n\\n UAR_Leak 3: (possible) same as Leak3\"}", "{\"ID\": \"v3.19:sys_acct:0\", \"date\": \"2017-04-05 23:07:58.059534\", \"text\": \"UAR_Leak1: (possible)\\n- but dangling ptr would be blocked_hash (fs/locks.c , ln. 184)\"}", "{\"ID\": \"v3.19:sys_acct:1\", \"date\": \"2017-04-07 17:57:14.449741\", \"text\": \"UAF_Leak1: (possible)\\n\\n'avc'  is added to 'anon_vma'. Seems to be intentional. \"}", "{\"ID\": \"v3.19:sys_acct:0\", \"date\": \"2017-04-05 23:07:58.059534\", \"text\": \"UAR_Leak1: (possible)\\n- but dangling ptr would be blocked_hash (fs/locks.c , ln. 184)\"}", "{\"ID\": \"v3.19:sys_acct:1\", \"date\": \"2017-04-07 17:57:14.449741\", \"text\": \"UAF_Leak1: (possible)\\n\\n'avc'  is added to 'anon_vma'. Seems to be intentional. \"}", "{\"ID\": \"v3.19:sys_acct:0\", \"date\": \"2017-04-05 23:07:58.059534\", \"text\": \"UAR_Leak1: (possible)\\n- but dangling ptr would be blocked_hash (fs/locks.c , ln. 184)\"}", "{\"ID\": \"v3.19:sys_acct:1\", \"date\": \"2017-04-07 17:57:14.449741\", \"text\": \"UAF_Leak1: (possible)\\n\\n'avc'  is added to 'anon_vma'. Seems to be intentional. \"}", "{\"ID\": \"v3.19:sys_acct:0\", \"date\": \"2017-04-05 23:07:58.059534\", \"text\": \"UAR_Leak1: (possible)\\n- but dangling ptr would be blocked_hash (fs/locks.c , ln. 184)\"}", "{\"ID\": \"v3.19:sys_acct:1\", \"date\": \"2017-04-07 17:57:14.449741\", \"text\": \"UAF_Leak1: (possible)\\n\\n'avc'  is added to 'anon_vma'. Seems to be intentional. \"}", "{\"ID\": \"v3.19:sys_acct:0\", \"date\": \"2017-04-05 23:07:58.059534\", \"text\": \"UAR_Leak1: (possible)\\n- but dangling ptr would be blocked_hash (fs/locks.c , ln. 184)\"}", "{\"ID\": \"v3.19:sys_acct:1\", \"date\": \"2017-04-07 17:57:14.449741\", \"text\": \"UAF_Leak1: (possible)\\n\\n'avc'  is added to 'anon_vma'. Seems to be intentional. \"}", "{\"ID\": \"v3.19:sys_acct:0\", \"date\": \"2017-04-05 23:07:58.059534\", \"text\": \"UAR_Leak1: (possible)\\n- but dangling ptr would be blocked_hash (fs/locks.c , ln. 184)\"}", "{\"ID\": \"v3.19:sys_acct:1\", \"date\": \"2017-04-07 17:57:14.449741\", \"text\": \"UAF_Leak1: (possible)\\n\\n'avc'  is added to 'anon_vma'. Seems to be intentional. \"}", "{\"ID\": \"v3.19:sys_acct:0\", \"date\": \"2017-04-05 23:07:58.059534\", \"text\": \"UAR_Leak1: (possible)\\n- but dangling ptr would be blocked_hash (fs/locks.c , ln. 184)\"}", "{\"ID\": \"v3.19:sys_acct:1\", \"date\": \"2017-04-07 17:57:14.449741\", \"text\": \"UAF_Leak1: (possible)\\n\\n'avc'  is added to 'anon_vma'. Seems to be intentional. \"}", "{\"ID\": \"v3.19:sys_arch_prctl:0\", \"date\": \"2017-04-05 23:12:41.706066\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (possible, not expl.)\"}", "{\"ID\": \"v3.19:sys_arch_prctl:1\", \"date\": \"2017-04-11 10:02:28.435641\", \"text\": \"UAR_Leak2 not possible because it is in a static function.\"}", "{\"ID\": \"v3.19:sys_arch_prctl:2\", \"date\": \"2017-04-11 10:02:30.088358\", \"text\": \"\"}", "{\"ID\": \"v3.19:sys_arch_prctl:0\", \"date\": \"2017-04-05 23:12:41.706066\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (possible, not expl.)\"}", "{\"ID\": \"v3.19:sys_arch_prctl:1\", \"date\": \"2017-04-11 10:02:28.435641\", \"text\": \"UAR_Leak2 not possible because it is in a static function.\"}", "{\"ID\": \"v3.19:sys_arch_prctl:2\", \"date\": \"2017-04-11 10:02:30.088358\", \"text\": \"\"}", "{\"ID\": \"v3.19:sys_arch_prctl:0\", \"date\": \"2017-04-05 23:12:41.706066\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (possible, not expl.)\"}", "{\"ID\": \"v3.19:sys_arch_prctl:1\", \"date\": \"2017-04-11 10:02:28.435641\", \"text\": \"UAR_Leak2 not possible because it is in a static function.\"}", "{\"ID\": \"v3.19:sys_arch_prctl:2\", \"date\": \"2017-04-11 10:02:30.088358\", \"text\": \"\"}", "{\"ID\": \"v3.19:sys_arch_prctl:0\", \"date\": \"2017-04-05 23:12:41.706066\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (possible, not expl.)\"}", "{\"ID\": \"v3.19:sys_arch_prctl:1\", \"date\": \"2017-04-11 10:02:28.435641\", \"text\": \"UAR_Leak2 not possible because it is in a static function.\"}", "{\"ID\": \"v3.19:sys_arch_prctl:2\", \"date\": \"2017-04-11 10:02:30.088358\", \"text\": \"\"}", "{\"ID\": \"v3.19:sys_arch_prctl:0\", \"date\": \"2017-04-05 23:12:41.706066\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (possible, not expl.)\"}", "{\"ID\": \"v3.19:sys_arch_prctl:1\", \"date\": \"2017-04-11 10:02:28.435641\", \"text\": \"UAR_Leak2 not possible because it is in a static function.\"}", "{\"ID\": \"v3.19:sys_arch_prctl:2\", \"date\": \"2017-04-11 10:02:30.088358\", \"text\": \"\"}", "{\"ID\": \"v3.19:sys_arch_prctl:0\", \"date\": \"2017-04-05 23:12:41.706066\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (possible, not expl.)\"}", "{\"ID\": \"v3.19:sys_arch_prctl:1\", \"date\": \"2017-04-11 10:02:28.435641\", \"text\": \"UAR_Leak2 not possible because it is in a static function.\"}", "{\"ID\": \"v3.19:sys_arch_prctl:2\", \"date\": \"2017-04-11 10:02:30.088358\", \"text\": \"\"}", "{\"ID\": \"v3.19:sys_arch_prctl:0\", \"date\": \"2017-04-05 23:12:41.706066\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (possible, not expl.)\"}", "{\"ID\": \"v3.19:sys_arch_prctl:1\", \"date\": \"2017-04-11 10:02:28.435641\", \"text\": \"UAR_Leak2 not possible because it is in a static function.\"}", "{\"ID\": \"v3.19:sys_arch_prctl:2\", \"date\": \"2017-04-11 10:02:30.088358\", \"text\": \"\"}", "{\"ID\": \"v3.19:sys_capset:0\", \"date\": \"2017-04-05 23:13:55.534088\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\n\\n'wait' will be always removed\"}", "{\"ID\": \"v3.19:sys_capset:0\", \"date\": \"2017-04-05 23:13:55.534088\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\n\\n'wait' will be always removed\"}", "{\"ID\": \"v3.19:sys_capset:0\", \"date\": \"2017-04-05 23:13:55.534088\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\n\\n'wait' will be always removed\"}", "{\"ID\": \"v3.19:sys_capset:0\", \"date\": \"2017-04-05 23:13:55.534088\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\n\\n'wait' will be always removed\"}", "{\"ID\": \"v3.19:sys_capset:0\", \"date\": \"2017-04-05 23:13:55.534088\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\n\\n'wait' will be always removed\"}", "{\"ID\": \"v3.19:sys_capset:0\", \"date\": \"2017-04-05 23:13:55.534088\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\n\\n'wait' will be always removed\"}", "{\"ID\": \"v3.19:sys_capset:0\", \"date\": \"2017-04-05 23:13:55.534088\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\n\\n'wait' will be always removed\"}", "{\"ID\": \"v3.19:sys_epoll_ctl:0\", \"date\": \"2017-04-05 23:17:36.495617\", \"text\": \"UAR_Leak 1: (not possible)\\n\\n'list_del' will remove 'tnode.llink' correctly at the end of the function.\"}", "{\"ID\": \"v3.19:sys_epoll_ctl:1\", \"date\": \"2017-04-05 23:19:16.606228\", \"text\": \"The same applies for UAR_Leak 2\"}", "{\"ID\": \"v3.19:sys_epoll_ctl:0\", \"date\": \"2017-04-05 23:17:36.495617\", \"text\": \"UAR_Leak 1: (not possible)\\n\\n'list_del' will remove 'tnode.llink' correctly at the end of the function.\"}", "{\"ID\": \"v3.19:sys_epoll_ctl:1\", \"date\": \"2017-04-05 23:19:16.606228\", \"text\": \"The same applies for UAR_Leak 2\"}", "{\"ID\": \"v3.19:sys_epoll_ctl:0\", \"date\": \"2017-04-05 23:17:36.495617\", \"text\": \"UAR_Leak 1: (not possible)\\n\\n'list_del' will remove 'tnode.llink' correctly at the end of the function.\"}", "{\"ID\": \"v3.19:sys_epoll_ctl:1\", \"date\": \"2017-04-05 23:19:16.606228\", \"text\": \"The same applies for UAR_Leak 2\"}", "{\"ID\": \"v3.19:sys_epoll_ctl:0\", \"date\": \"2017-04-05 23:17:36.495617\", \"text\": \"UAR_Leak 1: (not possible)\\n\\n'list_del' will remove 'tnode.llink' correctly at the end of the function.\"}", "{\"ID\": \"v3.19:sys_epoll_ctl:1\", \"date\": \"2017-04-05 23:19:16.606228\", \"text\": \"The same applies for UAR_Leak 2\"}", "{\"ID\": \"v3.19:sys_epoll_ctl:0\", \"date\": \"2017-04-05 23:17:36.495617\", \"text\": \"UAR_Leak 1: (not possible)\\n\\n'list_del' will remove 'tnode.llink' correctly at the end of the function.\"}", "{\"ID\": \"v3.19:sys_epoll_ctl:1\", \"date\": \"2017-04-05 23:19:16.606228\", \"text\": \"The same applies for UAR_Leak 2\"}", "{\"ID\": \"v3.19:sys_epoll_ctl:0\", \"date\": \"2017-04-05 23:17:36.495617\", \"text\": \"UAR_Leak 1: (not possible)\\n\\n'list_del' will remove 'tnode.llink' correctly at the end of the function.\"}", "{\"ID\": \"v3.19:sys_epoll_ctl:1\", \"date\": \"2017-04-05 23:19:16.606228\", \"text\": \"The same applies for UAR_Leak 2\"}", "{\"ID\": \"v3.19:sys_epoll_ctl:0\", \"date\": \"2017-04-05 23:17:36.495617\", \"text\": \"UAR_Leak 1: (not possible)\\n\\n'list_del' will remove 'tnode.llink' correctly at the end of the function.\"}", "{\"ID\": \"v3.19:sys_epoll_ctl:1\", \"date\": \"2017-04-05 23:19:16.606228\", \"text\": \"The same applies for UAR_Leak 2\"}", "{\"ID\": \"v3.19:sys_epoll_pwait:0\", \"date\": \"2017-04-05 23:58:36.504829\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\n\\n'txlist' is only a list head and all pointers to it will be removed with 'list_splice'\"}", "{\"ID\": \"v3.19:sys_epoll_pwait:0\", \"date\": \"2017-04-05 23:58:36.504829\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\n\\n'txlist' is only a list head and all pointers to it will be removed with 'list_splice'\"}", "{\"ID\": \"v3.19:sys_epoll_pwait:0\", \"date\": \"2017-04-05 23:58:36.504829\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\n\\n'txlist' is only a list head and all pointers to it will be removed with 'list_splice'\"}", "{\"ID\": \"v3.19:sys_epoll_pwait:0\", \"date\": \"2017-04-05 23:58:36.504829\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\n\\n'txlist' is only a list head and all pointers to it will be removed with 'list_splice'\"}", "{\"ID\": \"v3.19:sys_epoll_pwait:0\", \"date\": \"2017-04-05 23:58:36.504829\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\n\\n'txlist' is only a list head and all pointers to it will be removed with 'list_splice'\"}", "{\"ID\": \"v3.19:sys_epoll_pwait:0\", \"date\": \"2017-04-05 23:58:36.504829\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\n\\n'txlist' is only a list head and all pointers to it will be removed with 'list_splice'\"}", "{\"ID\": \"v3.19:sys_epoll_pwait:0\", \"date\": \"2017-04-05 23:58:36.504829\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\n\\n'txlist' is only a list head and all pointers to it will be removed with 'list_splice'\"}", "{\"ID\": \"v3.19:sys_execve:0\", \"date\": \"2017-04-06 00:25:42.220796\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\n'dispose' is only a list head\\n\\nUAR_Leak 3: (possible)\\nUAR_Leak 4: (possible)\\n\\nadded to a global list in 'propagate_mnt'. No related remove found.\\n\\nUAR_Leak 5: (not possible)\\n\\nassigned to itself\\n\\nUAR_Leak 6: (not possible)\\n\\nseams to have been removed.\\n\"}", "{\"ID\": \"v3.19:sys_execve:0\", \"date\": \"2017-04-06 00:25:42.220796\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\n'dispose' is only a list head\\n\\nUAR_Leak 3: (possible)\\nUAR_Leak 4: (possible)\\n\\nadded to a global list in 'propagate_mnt'. No related remove found.\\n\\nUAR_Leak 5: (not possible)\\n\\nassigned to itself\\n\\nUAR_Leak 6: (not possible)\\n\\nseams to have been removed.\\n\"}", "{\"ID\": \"v3.19:sys_execve:0\", \"date\": \"2017-04-06 00:25:42.220796\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\n'dispose' is only a list head\\n\\nUAR_Leak 3: (possible)\\nUAR_Leak 4: (possible)\\n\\nadded to a global list in 'propagate_mnt'. No related remove found.\\n\\nUAR_Leak 5: (not possible)\\n\\nassigned to itself\\n\\nUAR_Leak 6: (not possible)\\n\\nseams to have been removed.\\n\"}", "{\"ID\": \"v3.19:sys_execve:0\", \"date\": \"2017-04-06 00:25:42.220796\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\n'dispose' is only a list head\\n\\nUAR_Leak 3: (possible)\\nUAR_Leak 4: (possible)\\n\\nadded to a global list in 'propagate_mnt'. No related remove found.\\n\\nUAR_Leak 5: (not possible)\\n\\nassigned to itself\\n\\nUAR_Leak 6: (not possible)\\n\\nseams to have been removed.\\n\"}", "{\"ID\": \"v3.19:sys_execve:0\", \"date\": \"2017-04-06 00:25:42.220796\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\n'dispose' is only a list head\\n\\nUAR_Leak 3: (possible)\\nUAR_Leak 4: (possible)\\n\\nadded to a global list in 'propagate_mnt'. No related remove found.\\n\\nUAR_Leak 5: (not possible)\\n\\nassigned to itself\\n\\nUAR_Leak 6: (not possible)\\n\\nseams to have been removed.\\n\"}", "{\"ID\": \"v3.19:sys_execve:0\", \"date\": \"2017-04-06 00:25:42.220796\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\n'dispose' is only a list head\\n\\nUAR_Leak 3: (possible)\\nUAR_Leak 4: (possible)\\n\\nadded to a global list in 'propagate_mnt'. No related remove found.\\n\\nUAR_Leak 5: (not possible)\\n\\nassigned to itself\\n\\nUAR_Leak 6: (not possible)\\n\\nseams to have been removed.\\n\"}", "{\"ID\": \"v3.19:sys_execve:0\", \"date\": \"2017-04-06 00:25:42.220796\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\n'dispose' is only a list head\\n\\nUAR_Leak 3: (possible)\\nUAR_Leak 4: (possible)\\n\\nadded to a global list in 'propagate_mnt'. No related remove found.\\n\\nUAR_Leak 5: (not possible)\\n\\nassigned to itself\\n\\nUAR_Leak 6: (not possible)\\n\\nseams to have been removed.\\n\"}", "{\"ID\": \"v3.19:sys_finit_module:0\", \"date\": \"2017-04-06 00:50:17.939282\", \"text\": \"UAR_Leak 1: (possible)\\n\\nno trivial remove found.\"}", "{\"ID\": \"v3.19:sys_finit_module:0\", \"date\": \"2017-04-06 00:50:17.939282\", \"text\": \"UAR_Leak 1: (possible)\\n\\nno trivial remove found.\"}", "{\"ID\": \"v3.19:sys_finit_module:0\", \"date\": \"2017-04-06 00:50:17.939282\", \"text\": \"UAR_Leak 1: (possible)\\n\\nno trivial remove found.\"}", "{\"ID\": \"v3.19:sys_finit_module:0\", \"date\": \"2017-04-06 00:50:17.939282\", \"text\": \"UAR_Leak 1: (possible)\\n\\nno trivial remove found.\"}", "{\"ID\": \"v3.19:sys_finit_module:0\", \"date\": \"2017-04-06 00:50:17.939282\", \"text\": \"UAR_Leak 1: (possible)\\n\\nno trivial remove found.\"}", "{\"ID\": \"v3.19:sys_finit_module:0\", \"date\": \"2017-04-06 00:50:17.939282\", \"text\": \"UAR_Leak 1: (possible)\\n\\nno trivial remove found.\"}", "{\"ID\": \"v3.19:sys_finit_module:0\", \"date\": \"2017-04-06 00:50:17.939282\", \"text\": \"UAR_Leak 1: (possible)\\n\\nno trivial remove found.\"}", "{\"ID\": \"v3.19:sys_fork:0\", \"date\": \"2017-04-06 09:22:21.487747\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nthe memory the local variable is added to is freed at the end of the function.\\n\\n\"}", "{\"ID\": \"v3.19:sys_fork:1\", \"date\": \"2017-04-06 09:28:30.735881\", \"text\": \"UAR_Leak 3: (not possible)\\n\\nThe same as above\"}", "{\"ID\": \"v3.19:sys_fork:0\", \"date\": \"2017-04-06 09:22:21.487747\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nthe memory the local variable is added to is freed at the end of the function.\\n\\n\"}", "{\"ID\": \"v3.19:sys_fork:1\", \"date\": \"2017-04-06 09:28:30.735881\", \"text\": \"UAR_Leak 3: (not possible)\\n\\nThe same as above\"}", "{\"ID\": \"v3.19:sys_fork:0\", \"date\": \"2017-04-06 09:22:21.487747\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nthe memory the local variable is added to is freed at the end of the function.\\n\\n\"}", "{\"ID\": \"v3.19:sys_fork:1\", \"date\": \"2017-04-06 09:28:30.735881\", \"text\": \"UAR_Leak 3: (not possible)\\n\\nThe same as above\"}", "{\"ID\": \"v3.19:sys_fork:0\", \"date\": \"2017-04-06 09:22:21.487747\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nthe memory the local variable is added to is freed at the end of the function.\\n\\n\"}", "{\"ID\": \"v3.19:sys_fork:1\", \"date\": \"2017-04-06 09:28:30.735881\", \"text\": \"UAR_Leak 3: (not possible)\\n\\nThe same as above\"}", "{\"ID\": \"v3.19:sys_fork:0\", \"date\": \"2017-04-06 09:22:21.487747\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nthe memory the local variable is added to is freed at the end of the function.\\n\\n\"}", "{\"ID\": \"v3.19:sys_fork:1\", \"date\": \"2017-04-06 09:28:30.735881\", \"text\": \"UAR_Leak 3: (not possible)\\n\\nThe same as above\"}", "{\"ID\": \"v3.19:sys_fork:0\", \"date\": \"2017-04-06 09:22:21.487747\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nthe memory the local variable is added to is freed at the end of the function.\\n\\n\"}", "{\"ID\": \"v3.19:sys_fork:1\", \"date\": \"2017-04-06 09:28:30.735881\", \"text\": \"UAR_Leak 3: (not possible)\\n\\nThe same as above\"}", "{\"ID\": \"v3.19:sys_fork:0\", \"date\": \"2017-04-06 09:22:21.487747\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nthe memory the local variable is added to is freed at the end of the function.\\n\\n\"}", "{\"ID\": \"v3.19:sys_fork:1\", \"date\": \"2017-04-06 09:28:30.735881\", \"text\": \"UAR_Leak 3: (not possible)\\n\\nThe same as above\"}", "{\"ID\": \"v3.19:sys_futex:0\", \"date\": \"2017-04-06 09:32:56.033712\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 3: (possible)\\n\\nnot sure if this dangling ptr is possible.\\n\\nUAR_Leak 2: (possible)\\n\\nhas to be revisited in order to check if exploitable. \\n\"}", "{\"ID\": \"v3.19:sys_futex:0\", \"date\": \"2017-04-06 09:32:56.033712\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 3: (possible)\\n\\nnot sure if this dangling ptr is possible.\\n\\nUAR_Leak 2: (possible)\\n\\nhas to be revisited in order to check if exploitable. \\n\"}", "{\"ID\": \"v3.19:sys_futex:0\", \"date\": \"2017-04-06 09:32:56.033712\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 3: (possible)\\n\\nnot sure if this dangling ptr is possible.\\n\\nUAR_Leak 2: (possible)\\n\\nhas to be revisited in order to check if exploitable. \\n\"}", "{\"ID\": \"v3.19:sys_futex:0\", \"date\": \"2017-04-06 09:32:56.033712\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 3: (possible)\\n\\nnot sure if this dangling ptr is possible.\\n\\nUAR_Leak 2: (possible)\\n\\nhas to be revisited in order to check if exploitable. \\n\"}", "{\"ID\": \"v3.19:sys_futex:0\", \"date\": \"2017-04-06 09:32:56.033712\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 3: (possible)\\n\\nnot sure if this dangling ptr is possible.\\n\\nUAR_Leak 2: (possible)\\n\\nhas to be revisited in order to check if exploitable. \\n\"}", "{\"ID\": \"v3.19:sys_futex:0\", \"date\": \"2017-04-06 09:32:56.033712\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 3: (possible)\\n\\nnot sure if this dangling ptr is possible.\\n\\nUAR_Leak 2: (possible)\\n\\nhas to be revisited in order to check if exploitable. \\n\"}", "{\"ID\": \"v3.19:sys_futex:0\", \"date\": \"2017-04-06 09:32:56.033712\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 3: (possible)\\n\\nnot sure if this dangling ptr is possible.\\n\\nUAR_Leak 2: (possible)\\n\\nhas to be revisited in order to check if exploitable. \\n\"}", "{\"ID\": \"v3.19:sys_io_cancel:0\", \"date\": \"2017-04-06 09:46:28.675759\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\"}", "{\"ID\": \"v3.19:sys_io_cancel:1\", \"date\": \"2017-04-11 10:12:16.102134\", \"text\": \"Is no leak since the function is static\"}", "{\"ID\": \"v3.19:sys_io_cancel:0\", \"date\": \"2017-04-06 09:46:28.675759\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\"}", "{\"ID\": \"v3.19:sys_io_cancel:1\", \"date\": \"2017-04-11 10:12:16.102134\", \"text\": \"Is no leak since the function is static\"}", "{\"ID\": \"v3.19:sys_io_cancel:0\", \"date\": \"2017-04-06 09:46:28.675759\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\"}", "{\"ID\": \"v3.19:sys_io_cancel:1\", \"date\": \"2017-04-11 10:12:16.102134\", \"text\": \"Is no leak since the function is static\"}", "{\"ID\": \"v3.19:sys_io_cancel:0\", \"date\": \"2017-04-06 09:46:28.675759\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\"}", "{\"ID\": \"v3.19:sys_io_cancel:1\", \"date\": \"2017-04-11 10:12:16.102134\", \"text\": \"Is no leak since the function is static\"}", "{\"ID\": \"v3.19:sys_io_cancel:0\", \"date\": \"2017-04-06 09:46:28.675759\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\"}", "{\"ID\": \"v3.19:sys_io_cancel:1\", \"date\": \"2017-04-11 10:12:16.102134\", \"text\": \"Is no leak since the function is static\"}", "{\"ID\": \"v3.19:sys_io_cancel:0\", \"date\": \"2017-04-06 09:46:28.675759\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\"}", "{\"ID\": \"v3.19:sys_io_cancel:1\", \"date\": \"2017-04-11 10:12:16.102134\", \"text\": \"Is no leak since the function is static\"}", "{\"ID\": \"v3.19:sys_io_cancel:0\", \"date\": \"2017-04-06 09:46:28.675759\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\"}", "{\"ID\": \"v3.19:sys_io_cancel:1\", \"date\": \"2017-04-11 10:12:16.102134\", \"text\": \"Is no leak since the function is static\"}", "{\"ID\": \"v3.19:sys_io_destroy:0\", \"date\": \"2017-04-06 09:56:16.703493\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\\n\\n\"}", "{\"ID\": \"v3.19:sys_io_destroy:1\", \"date\": \"2017-04-06 16:23:26.416293\", \"text\": \"UAR_Leak 1 and 2 aren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_io_destroy:2\", \"date\": \"2017-04-11 10:13:14.983709\", \"text\": \"UAR_Leak1 and 2 are no leaks since the function is static\"}", "{\"ID\": \"v3.19:sys_io_destroy:0\", \"date\": \"2017-04-06 09:56:16.703493\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\\n\\n\"}", "{\"ID\": \"v3.19:sys_io_destroy:1\", \"date\": \"2017-04-06 16:23:26.416293\", \"text\": \"UAR_Leak 1 and 2 aren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_io_destroy:2\", \"date\": \"2017-04-11 10:13:14.983709\", \"text\": \"UAR_Leak1 and 2 are no leaks since the function is static\"}", "{\"ID\": \"v3.19:sys_io_destroy:0\", \"date\": \"2017-04-06 09:56:16.703493\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\\n\\n\"}", "{\"ID\": \"v3.19:sys_io_destroy:1\", \"date\": \"2017-04-06 16:23:26.416293\", \"text\": \"UAR_Leak 1 and 2 aren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_io_destroy:2\", \"date\": \"2017-04-11 10:13:14.983709\", \"text\": \"UAR_Leak1 and 2 are no leaks since the function is static\"}", "{\"ID\": \"v3.19:sys_io_destroy:0\", \"date\": \"2017-04-06 09:56:16.703493\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\\n\\n\"}", "{\"ID\": \"v3.19:sys_io_destroy:1\", \"date\": \"2017-04-06 16:23:26.416293\", \"text\": \"UAR_Leak 1 and 2 aren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_io_destroy:2\", \"date\": \"2017-04-11 10:13:14.983709\", \"text\": \"UAR_Leak1 and 2 are no leaks since the function is static\"}", "{\"ID\": \"v3.19:sys_io_destroy:0\", \"date\": \"2017-04-06 09:56:16.703493\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\\n\\n\"}", "{\"ID\": \"v3.19:sys_io_destroy:1\", \"date\": \"2017-04-06 16:23:26.416293\", \"text\": \"UAR_Leak 1 and 2 aren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_io_destroy:2\", \"date\": \"2017-04-11 10:13:14.983709\", \"text\": \"UAR_Leak1 and 2 are no leaks since the function is static\"}", "{\"ID\": \"v3.19:sys_io_destroy:0\", \"date\": \"2017-04-06 09:56:16.703493\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\\n\\n\"}", "{\"ID\": \"v3.19:sys_io_destroy:1\", \"date\": \"2017-04-06 16:23:26.416293\", \"text\": \"UAR_Leak 1 and 2 aren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_io_destroy:2\", \"date\": \"2017-04-11 10:13:14.983709\", \"text\": \"UAR_Leak1 and 2 are no leaks since the function is static\"}", "{\"ID\": \"v3.19:sys_io_destroy:0\", \"date\": \"2017-04-06 09:56:16.703493\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\\n\\n\"}", "{\"ID\": \"v3.19:sys_io_destroy:1\", \"date\": \"2017-04-06 16:23:26.416293\", \"text\": \"UAR_Leak 1 and 2 aren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_io_destroy:2\", \"date\": \"2017-04-11 10:13:14.983709\", \"text\": \"UAR_Leak1 and 2 are no leaks since the function is static\"}", "{\"ID\": \"v3.19:sys_io_getevents:0\", \"date\": \"2017-04-06 09:58:24.223633\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\"}", "{\"ID\": \"v3.19:sys_io_getevents:0\", \"date\": \"2017-04-06 09:58:24.223633\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\"}", "{\"ID\": \"v3.19:sys_io_getevents:0\", \"date\": \"2017-04-06 09:58:24.223633\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\"}", "{\"ID\": \"v3.19:sys_io_getevents:0\", \"date\": \"2017-04-06 09:58:24.223633\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\"}", "{\"ID\": \"v3.19:sys_io_getevents:0\", \"date\": \"2017-04-06 09:58:24.223633\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\"}", "{\"ID\": \"v3.19:sys_io_getevents:0\", \"date\": \"2017-04-06 09:58:24.223633\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\"}", "{\"ID\": \"v3.19:sys_io_getevents:0\", \"date\": \"2017-04-06 09:58:24.223633\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\"}", "{\"ID\": \"v3.19:sys_io_setup:0\", \"date\": \"2017-04-06 09:58:50.234602\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\"}", "{\"ID\": \"v3.19:sys_io_setup:1\", \"date\": \"2017-04-06 12:35:30.212132\", \"text\": \"test\"}", "{\"ID\": \"v3.19:sys_io_setup:0\", \"date\": \"2017-04-06 09:58:50.234602\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\"}", "{\"ID\": \"v3.19:sys_io_setup:1\", \"date\": \"2017-04-06 12:35:30.212132\", \"text\": \"test\"}", "{\"ID\": \"v3.19:sys_io_setup:0\", \"date\": \"2017-04-06 09:58:50.234602\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\"}", "{\"ID\": \"v3.19:sys_io_setup:1\", \"date\": \"2017-04-06 12:35:30.212132\", \"text\": \"test\"}", "{\"ID\": \"v3.19:sys_io_setup:0\", \"date\": \"2017-04-06 09:58:50.234602\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\"}", "{\"ID\": \"v3.19:sys_io_setup:1\", \"date\": \"2017-04-06 12:35:30.212132\", \"text\": \"test\"}", "{\"ID\": \"v3.19:sys_io_setup:0\", \"date\": \"2017-04-06 09:58:50.234602\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\"}", "{\"ID\": \"v3.19:sys_io_setup:1\", \"date\": \"2017-04-06 12:35:30.212132\", \"text\": \"test\"}", "{\"ID\": \"v3.19:sys_io_setup:0\", \"date\": \"2017-04-06 09:58:50.234602\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\"}", "{\"ID\": \"v3.19:sys_io_setup:1\", \"date\": \"2017-04-06 12:35:30.212132\", \"text\": \"test\"}", "{\"ID\": \"v3.19:sys_io_setup:0\", \"date\": \"2017-04-06 09:58:50.234602\", \"text\": \"UAR_Leak 1: (possible)\\nUAR_Leak 2: (possible)\\n\\n'tmp' seems to leave the valid scope within 'mmap_event->file_name'. However, 'mmap_event' is no longer used after the function.\\n\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\nUAR_Leak 5: (not possible)\\n\\nActually, the analysis shouldn't report this as a bug since 'wait' is always removed from 'x->wait'.\"}", "{\"ID\": \"v3.19:sys_io_setup:1\", \"date\": \"2017-04-06 12:35:30.212132\", \"text\": \"test\"}", "{\"ID\": \"v3.19:sys_io_submit:0\", \"date\": \"2017-04-06 10:39:43.662378\", \"text\": \"UAR_Leak 1: (possible???) \\n\\nIs quite complicated. multiple assignments in different functions, but it seems that there is no bug that could be exploited.\\n\\n\"}", "{\"ID\": \"v3.19:sys_io_submit:1\", \"date\": \"2017-04-11 10:18:17.921731\", \"text\": \"Is no leak. 'fl' will be removed at ln 1276\"}", "{\"ID\": \"v3.19:sys_io_submit:0\", \"date\": \"2017-04-06 10:39:43.662378\", \"text\": \"UAR_Leak 1: (possible???) \\n\\nIs quite complicated. multiple assignments in different functions, but it seems that there is no bug that could be exploited.\\n\\n\"}", "{\"ID\": \"v3.19:sys_io_submit:1\", \"date\": \"2017-04-11 10:18:17.921731\", \"text\": \"Is no leak. 'fl' will be removed at ln 1276\"}", "{\"ID\": \"v3.19:sys_io_submit:0\", \"date\": \"2017-04-06 10:39:43.662378\", \"text\": \"UAR_Leak 1: (possible???) \\n\\nIs quite complicated. multiple assignments in different functions, but it seems that there is no bug that could be exploited.\\n\\n\"}", "{\"ID\": \"v3.19:sys_io_submit:1\", \"date\": \"2017-04-11 10:18:17.921731\", \"text\": \"Is no leak. 'fl' will be removed at ln 1276\"}", "{\"ID\": \"v3.19:sys_io_submit:0\", \"date\": \"2017-04-06 10:39:43.662378\", \"text\": \"UAR_Leak 1: (possible???) \\n\\nIs quite complicated. multiple assignments in different functions, but it seems that there is no bug that could be exploited.\\n\\n\"}", "{\"ID\": \"v3.19:sys_io_submit:1\", \"date\": \"2017-04-11 10:18:17.921731\", \"text\": \"Is no leak. 'fl' will be removed at ln 1276\"}", "{\"ID\": \"v3.19:sys_io_submit:0\", \"date\": \"2017-04-06 10:39:43.662378\", \"text\": \"UAR_Leak 1: (possible???) \\n\\nIs quite complicated. multiple assignments in different functions, but it seems that there is no bug that could be exploited.\\n\\n\"}", "{\"ID\": \"v3.19:sys_io_submit:1\", \"date\": \"2017-04-11 10:18:17.921731\", \"text\": \"Is no leak. 'fl' will be removed at ln 1276\"}", "{\"ID\": \"v3.19:sys_io_submit:0\", \"date\": \"2017-04-06 10:39:43.662378\", \"text\": \"UAR_Leak 1: (possible???) \\n\\nIs quite complicated. multiple assignments in different functions, but it seems that there is no bug that could be exploited.\\n\\n\"}", "{\"ID\": \"v3.19:sys_io_submit:1\", \"date\": \"2017-04-11 10:18:17.921731\", \"text\": \"Is no leak. 'fl' will be removed at ln 1276\"}", "{\"ID\": \"v3.19:sys_io_submit:0\", \"date\": \"2017-04-06 10:39:43.662378\", \"text\": \"UAR_Leak 1: (possible???) \\n\\nIs quite complicated. multiple assignments in different functions, but it seems that there is no bug that could be exploited.\\n\\n\"}", "{\"ID\": \"v3.19:sys_io_submit:1\", \"date\": \"2017-04-11 10:18:17.921731\", \"text\": \"Is no leak. 'fl' will be removed at ln 1276\"}", "{\"ID\": \"v3.19:sys_madvise:0\", \"date\": \"2017-04-06 10:47:12.006453\", \"text\": \"UAR_Leak 1: (not possible)\\n\\n 'list_splice_init' wont add 'list' to 'plug->mq_list'.\\n\"}", "{\"ID\": \"v3.19:sys_madvise:1\", \"date\": \"2017-04-06 14:38:53.762744\", \"text\": \"UAR_Leak 2: (not possible)\\n\\n'ctx_list' shouldn't enter 'list_splice_init'\\n\\n\"}", "{\"ID\": \"v3.19:sys_madvise:2\", \"date\": \"2017-04-06 15:52:42.736400\", \"text\": \"UAR_Leak 3: (not possible)\\n\\nalso interesting: 'acv' (the heap object the local variable 'prev' is added to) is never freed.\\n\\nUAR_Leak 4: (not possible)\\n\\nsame as Leak3\"}", "{\"ID\": \"v3.19:sys_madvise:0\", \"date\": \"2017-04-06 10:47:12.006453\", \"text\": \"UAR_Leak 1: (not possible)\\n\\n 'list_splice_init' wont add 'list' to 'plug->mq_list'.\\n\"}", "{\"ID\": \"v3.19:sys_madvise:1\", \"date\": \"2017-04-06 14:38:53.762744\", \"text\": \"UAR_Leak 2: (not possible)\\n\\n'ctx_list' shouldn't enter 'list_splice_init'\\n\\n\"}", "{\"ID\": \"v3.19:sys_madvise:2\", \"date\": \"2017-04-06 15:52:42.736400\", \"text\": \"UAR_Leak 3: (not possible)\\n\\nalso interesting: 'acv' (the heap object the local variable 'prev' is added to) is never freed.\\n\\nUAR_Leak 4: (not possible)\\n\\nsame as Leak3\"}", "{\"ID\": \"v3.19:sys_madvise:0\", \"date\": \"2017-04-06 10:47:12.006453\", \"text\": \"UAR_Leak 1: (not possible)\\n\\n 'list_splice_init' wont add 'list' to 'plug->mq_list'.\\n\"}", "{\"ID\": \"v3.19:sys_madvise:1\", \"date\": \"2017-04-06 14:38:53.762744\", \"text\": \"UAR_Leak 2: (not possible)\\n\\n'ctx_list' shouldn't enter 'list_splice_init'\\n\\n\"}", "{\"ID\": \"v3.19:sys_madvise:2\", \"date\": \"2017-04-06 15:52:42.736400\", \"text\": \"UAR_Leak 3: (not possible)\\n\\nalso interesting: 'acv' (the heap object the local variable 'prev' is added to) is never freed.\\n\\nUAR_Leak 4: (not possible)\\n\\nsame as Leak3\"}", "{\"ID\": \"v3.19:sys_madvise:0\", \"date\": \"2017-04-06 10:47:12.006453\", \"text\": \"UAR_Leak 1: (not possible)\\n\\n 'list_splice_init' wont add 'list' to 'plug->mq_list'.\\n\"}", "{\"ID\": \"v3.19:sys_madvise:1\", \"date\": \"2017-04-06 14:38:53.762744\", \"text\": \"UAR_Leak 2: (not possible)\\n\\n'ctx_list' shouldn't enter 'list_splice_init'\\n\\n\"}", "{\"ID\": \"v3.19:sys_madvise:2\", \"date\": \"2017-04-06 15:52:42.736400\", \"text\": \"UAR_Leak 3: (not possible)\\n\\nalso interesting: 'acv' (the heap object the local variable 'prev' is added to) is never freed.\\n\\nUAR_Leak 4: (not possible)\\n\\nsame as Leak3\"}", "{\"ID\": \"v3.19:sys_madvise:0\", \"date\": \"2017-04-06 10:47:12.006453\", \"text\": \"UAR_Leak 1: (not possible)\\n\\n 'list_splice_init' wont add 'list' to 'plug->mq_list'.\\n\"}", "{\"ID\": \"v3.19:sys_madvise:1\", \"date\": \"2017-04-06 14:38:53.762744\", \"text\": \"UAR_Leak 2: (not possible)\\n\\n'ctx_list' shouldn't enter 'list_splice_init'\\n\\n\"}", "{\"ID\": \"v3.19:sys_madvise:2\", \"date\": \"2017-04-06 15:52:42.736400\", \"text\": \"UAR_Leak 3: (not possible)\\n\\nalso interesting: 'acv' (the heap object the local variable 'prev' is added to) is never freed.\\n\\nUAR_Leak 4: (not possible)\\n\\nsame as Leak3\"}", "{\"ID\": \"v3.19:sys_madvise:0\", \"date\": \"2017-04-06 10:47:12.006453\", \"text\": \"UAR_Leak 1: (not possible)\\n\\n 'list_splice_init' wont add 'list' to 'plug->mq_list'.\\n\"}", "{\"ID\": \"v3.19:sys_madvise:1\", \"date\": \"2017-04-06 14:38:53.762744\", \"text\": \"UAR_Leak 2: (not possible)\\n\\n'ctx_list' shouldn't enter 'list_splice_init'\\n\\n\"}", "{\"ID\": \"v3.19:sys_madvise:2\", \"date\": \"2017-04-06 15:52:42.736400\", \"text\": \"UAR_Leak 3: (not possible)\\n\\nalso interesting: 'acv' (the heap object the local variable 'prev' is added to) is never freed.\\n\\nUAR_Leak 4: (not possible)\\n\\nsame as Leak3\"}", "{\"ID\": \"v3.19:sys_madvise:0\", \"date\": \"2017-04-06 10:47:12.006453\", \"text\": \"UAR_Leak 1: (not possible)\\n\\n 'list_splice_init' wont add 'list' to 'plug->mq_list'.\\n\"}", "{\"ID\": \"v3.19:sys_madvise:1\", \"date\": \"2017-04-06 14:38:53.762744\", \"text\": \"UAR_Leak 2: (not possible)\\n\\n'ctx_list' shouldn't enter 'list_splice_init'\\n\\n\"}", "{\"ID\": \"v3.19:sys_madvise:2\", \"date\": \"2017-04-06 15:52:42.736400\", \"text\": \"UAR_Leak 3: (not possible)\\n\\nalso interesting: 'acv' (the heap object the local variable 'prev' is added to) is never freed.\\n\\nUAR_Leak 4: (not possible)\\n\\nsame as Leak3\"}", "{\"ID\": \"v3.19:sys_mkdir:0\", \"date\": \"2017-04-06 16:19:33.579701\", \"text\": \"UAR_Leak 1: (not possible)\"}", "{\"ID\": \"v3.19:sys_mkdir:0\", \"date\": \"2017-04-06 16:19:33.579701\", \"text\": \"UAR_Leak 1: (not possible)\"}", "{\"ID\": \"v3.19:sys_mkdir:0\", \"date\": \"2017-04-06 16:19:33.579701\", \"text\": \"UAR_Leak 1: (not possible)\"}", "{\"ID\": \"v3.19:sys_mkdir:0\", \"date\": \"2017-04-06 16:19:33.579701\", \"text\": \"UAR_Leak 1: (not possible)\"}", "{\"ID\": \"v3.19:sys_mkdir:0\", \"date\": \"2017-04-06 16:19:33.579701\", \"text\": \"UAR_Leak 1: (not possible)\"}", "{\"ID\": \"v3.19:sys_mkdir:0\", \"date\": \"2017-04-06 16:19:33.579701\", \"text\": \"UAR_Leak 1: (not possible)\"}", "{\"ID\": \"v3.19:sys_mkdir:0\", \"date\": \"2017-04-06 16:19:33.579701\", \"text\": \"UAR_Leak 1: (not possible)\"}", "{\"ID\": \"v3.19:sys_mmap:0\", \"date\": \"2017-04-06 16:26:05.034339\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nAren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_mmap:0\", \"date\": \"2017-04-06 16:26:05.034339\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nAren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_mmap:0\", \"date\": \"2017-04-06 16:26:05.034339\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nAren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_mmap:0\", \"date\": \"2017-04-06 16:26:05.034339\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nAren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_mmap:0\", \"date\": \"2017-04-06 16:26:05.034339\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nAren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_mmap:0\", \"date\": \"2017-04-06 16:26:05.034339\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nAren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_mmap:0\", \"date\": \"2017-04-06 16:26:05.034339\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nAren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_modify_ldt:0\", \"date\": \"2017-04-06 16:26:39.097551\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nAren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_modify_ldt:0\", \"date\": \"2017-04-06 16:26:39.097551\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nAren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_modify_ldt:0\", \"date\": \"2017-04-06 16:26:39.097551\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nAren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_modify_ldt:0\", \"date\": \"2017-04-06 16:26:39.097551\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nAren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_modify_ldt:0\", \"date\": \"2017-04-06 16:26:39.097551\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nAren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_modify_ldt:0\", \"date\": \"2017-04-06 16:26:39.097551\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nAren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_modify_ldt:0\", \"date\": \"2017-04-06 16:26:39.097551\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nAren't actually bugs. 'perf_event_mmap_event' is a static function.\"}", "{\"ID\": \"v3.19:sys_mprotect:0\", \"date\": \"2017-04-06 16:49:04.748622\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\"}", "{\"ID\": \"v3.19:sys_mprotect:0\", \"date\": \"2017-04-06 16:49:04.748622\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\"}", "{\"ID\": \"v3.19:sys_mprotect:0\", \"date\": \"2017-04-06 16:49:04.748622\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\"}", "{\"ID\": \"v3.19:sys_mprotect:0\", \"date\": \"2017-04-06 16:49:04.748622\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\"}", "{\"ID\": \"v3.19:sys_mprotect:0\", \"date\": \"2017-04-06 16:49:04.748622\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\"}", "{\"ID\": \"v3.19:sys_mprotect:0\", \"date\": \"2017-04-06 16:49:04.748622\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\"}", "{\"ID\": \"v3.19:sys_mprotect:0\", \"date\": \"2017-04-06 16:49:04.748622\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\"}", "{\"ID\": \"v3.19:sys_reboot:0\", \"date\": \"2017-04-06 18:56:08.818561\", \"text\": \"UAR_Leak 1: (possible)\\n\\nseems to be intentional.\\n\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\n\\n'list_splice' doesn't join the head of the list to 'dpm_list' \\n\\nUAR_Leak 5: (not possible)\\n\\n'barr' will be removed. \"}", "{\"ID\": \"v3.19:sys_reboot:0\", \"date\": \"2017-04-06 18:56:08.818561\", \"text\": \"UAR_Leak 1: (possible)\\n\\nseems to be intentional.\\n\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\n\\n'list_splice' doesn't join the head of the list to 'dpm_list' \\n\\nUAR_Leak 5: (not possible)\\n\\n'barr' will be removed. \"}", "{\"ID\": \"v3.19:sys_reboot:0\", \"date\": \"2017-04-06 18:56:08.818561\", \"text\": \"UAR_Leak 1: (possible)\\n\\nseems to be intentional.\\n\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\n\\n'list_splice' doesn't join the head of the list to 'dpm_list' \\n\\nUAR_Leak 5: (not possible)\\n\\n'barr' will be removed. \"}", "{\"ID\": \"v3.19:sys_reboot:0\", \"date\": \"2017-04-06 18:56:08.818561\", \"text\": \"UAR_Leak 1: (possible)\\n\\nseems to be intentional.\\n\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\n\\n'list_splice' doesn't join the head of the list to 'dpm_list' \\n\\nUAR_Leak 5: (not possible)\\n\\n'barr' will be removed. \"}", "{\"ID\": \"v3.19:sys_reboot:0\", \"date\": \"2017-04-06 18:56:08.818561\", \"text\": \"UAR_Leak 1: (possible)\\n\\nseems to be intentional.\\n\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\n\\n'list_splice' doesn't join the head of the list to 'dpm_list' \\n\\nUAR_Leak 5: (not possible)\\n\\n'barr' will be removed. \"}", "{\"ID\": \"v3.19:sys_reboot:0\", \"date\": \"2017-04-06 18:56:08.818561\", \"text\": \"UAR_Leak 1: (possible)\\n\\nseems to be intentional.\\n\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\n\\n'list_splice' doesn't join the head of the list to 'dpm_list' \\n\\nUAR_Leak 5: (not possible)\\n\\n'barr' will be removed. \"}", "{\"ID\": \"v3.19:sys_reboot:0\", \"date\": \"2017-04-06 18:56:08.818561\", \"text\": \"UAR_Leak 1: (possible)\\n\\nseems to be intentional.\\n\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\\n\\n'list_splice' doesn't join the head of the list to 'dpm_list' \\n\\nUAR_Leak 5: (not possible)\\n\\n'barr' will be removed. \"}", "{\"ID\": \"v3.19:sys_recvmmsg:0\", \"date\": \"2017-04-06 20:57:32.167223\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nIf the function '___sys_recvmsg' wouldn't be static both leaks would be possible. \\nHowever, a leak could be the following path:\\n__sys_recvmmsg -> ___sys_recvmsg -> copy_msghdr_from_user -> iov_iter_init\\n                             -> sock_recvmsg -> __sock_recvmsg_nosec \\n\\nThis should add the local 'msg_sys' (in __sys_recvmmsg) to a socket.\\n\"}", "{\"ID\": \"v3.19:sys_recvmmsg:0\", \"date\": \"2017-04-06 20:57:32.167223\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nIf the function '___sys_recvmsg' wouldn't be static both leaks would be possible. \\nHowever, a leak could be the following path:\\n__sys_recvmmsg -> ___sys_recvmsg -> copy_msghdr_from_user -> iov_iter_init\\n                             -> sock_recvmsg -> __sock_recvmsg_nosec \\n\\nThis should add the local 'msg_sys' (in __sys_recvmmsg) to a socket.\\n\"}", "{\"ID\": \"v3.19:sys_recvmmsg:0\", \"date\": \"2017-04-06 20:57:32.167223\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nIf the function '___sys_recvmsg' wouldn't be static both leaks would be possible. \\nHowever, a leak could be the following path:\\n__sys_recvmmsg -> ___sys_recvmsg -> copy_msghdr_from_user -> iov_iter_init\\n                             -> sock_recvmsg -> __sock_recvmsg_nosec \\n\\nThis should add the local 'msg_sys' (in __sys_recvmmsg) to a socket.\\n\"}", "{\"ID\": \"v3.19:sys_recvmmsg:0\", \"date\": \"2017-04-06 20:57:32.167223\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nIf the function '___sys_recvmsg' wouldn't be static both leaks would be possible. \\nHowever, a leak could be the following path:\\n__sys_recvmmsg -> ___sys_recvmsg -> copy_msghdr_from_user -> iov_iter_init\\n                             -> sock_recvmsg -> __sock_recvmsg_nosec \\n\\nThis should add the local 'msg_sys' (in __sys_recvmmsg) to a socket.\\n\"}", "{\"ID\": \"v3.19:sys_recvmmsg:0\", \"date\": \"2017-04-06 20:57:32.167223\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nIf the function '___sys_recvmsg' wouldn't be static both leaks would be possible. \\nHowever, a leak could be the following path:\\n__sys_recvmmsg -> ___sys_recvmsg -> copy_msghdr_from_user -> iov_iter_init\\n                             -> sock_recvmsg -> __sock_recvmsg_nosec \\n\\nThis should add the local 'msg_sys' (in __sys_recvmmsg) to a socket.\\n\"}", "{\"ID\": \"v3.19:sys_recvmmsg:0\", \"date\": \"2017-04-06 20:57:32.167223\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nIf the function '___sys_recvmsg' wouldn't be static both leaks would be possible. \\nHowever, a leak could be the following path:\\n__sys_recvmmsg -> ___sys_recvmsg -> copy_msghdr_from_user -> iov_iter_init\\n                             -> sock_recvmsg -> __sock_recvmsg_nosec \\n\\nThis should add the local 'msg_sys' (in __sys_recvmmsg) to a socket.\\n\"}", "{\"ID\": \"v3.19:sys_recvmmsg:0\", \"date\": \"2017-04-06 20:57:32.167223\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nIf the function '___sys_recvmsg' wouldn't be static both leaks would be possible. \\nHowever, a leak could be the following path:\\n__sys_recvmmsg -> ___sys_recvmsg -> copy_msghdr_from_user -> iov_iter_init\\n                             -> sock_recvmsg -> __sock_recvmsg_nosec \\n\\nThis should add the local 'msg_sys' (in __sys_recvmmsg) to a socket.\\n\"}", "{\"ID\": \"v3.19:sys_recvmmsg:7\", \"date\": \"2017-04-24 10:36:01.586145\", \"text\": \"edit: (not possible)\\nIf the function '___sys_recvmsg' wouldn't be static both leaks would be possible\"}", "{\"ID\": \"v3.19:sys_sendmmsg:0\", \"date\": \"2017-04-06 21:47:23.190979\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nIf the function '___sys_sendmsg' wouldn't be static both leaks would be possible.\\n\"}", "{\"ID\": \"v3.19:sys_sendmmsg:0\", \"date\": \"2017-04-06 21:47:23.190979\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nIf the function '___sys_sendmsg' wouldn't be static both leaks would be possible.\\n\"}", "{\"ID\": \"v3.19:sys_sendmmsg:0\", \"date\": \"2017-04-06 21:47:23.190979\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nIf the function '___sys_sendmsg' wouldn't be static both leaks would be possible.\\n\"}", "{\"ID\": \"v3.19:sys_sendmmsg:0\", \"date\": \"2017-04-06 21:47:23.190979\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nIf the function '___sys_sendmsg' wouldn't be static both leaks would be possible.\\n\"}", "{\"ID\": \"v3.19:sys_sendmmsg:0\", \"date\": \"2017-04-06 21:47:23.190979\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nIf the function '___sys_sendmsg' wouldn't be static both leaks would be possible.\\n\"}", "{\"ID\": \"v3.19:sys_sendmmsg:0\", \"date\": \"2017-04-06 21:47:23.190979\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nIf the function '___sys_sendmsg' wouldn't be static both leaks would be possible.\\n\"}", "{\"ID\": \"v3.19:sys_sendmmsg:0\", \"date\": \"2017-04-06 21:47:23.190979\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\n\\nIf the function '___sys_sendmsg' wouldn't be static both leaks would be possible.\\n\"}", "{\"ID\": \"v3.19:sys_setxattr:0\", \"date\": \"2017-04-06 21:58:34.430916\", \"text\": \"UAR_Leak 1: (not possible)\"}", "{\"ID\": \"v3.19:sys_setxattr:0\", \"date\": \"2017-04-06 21:58:34.430916\", \"text\": \"UAR_Leak 1: (not possible)\"}", "{\"ID\": \"v3.19:sys_setxattr:0\", \"date\": \"2017-04-06 21:58:34.430916\", \"text\": \"UAR_Leak 1: (not possible)\"}", "{\"ID\": \"v3.19:sys_setxattr:0\", \"date\": \"2017-04-06 21:58:34.430916\", \"text\": \"UAR_Leak 1: (not possible)\"}", "{\"ID\": \"v3.19:sys_setxattr:0\", \"date\": \"2017-04-06 21:58:34.430916\", \"text\": \"UAR_Leak 1: (not possible)\"}", "{\"ID\": \"v3.19:sys_setxattr:0\", \"date\": \"2017-04-06 21:58:34.430916\", \"text\": \"UAR_Leak 1: (not possible)\"}", "{\"ID\": \"v3.19:sys_setxattr:0\", \"date\": \"2017-04-06 21:58:34.430916\", \"text\": \"UAR_Leak 1: (not possible)\"}", "{\"ID\": \"v3.19:sys_vfork:0\", \"date\": \"2017-04-06 22:00:55.264511\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\"}", "{\"ID\": \"v3.19:sys_vfork:0\", \"date\": \"2017-04-06 22:00:55.264511\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\"}", "{\"ID\": \"v3.19:sys_vfork:0\", \"date\": \"2017-04-06 22:00:55.264511\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\"}", "{\"ID\": \"v3.19:sys_vfork:0\", \"date\": \"2017-04-06 22:00:55.264511\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\"}", "{\"ID\": \"v3.19:sys_vfork:0\", \"date\": \"2017-04-06 22:00:55.264511\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\"}", "{\"ID\": \"v3.19:sys_vfork:0\", \"date\": \"2017-04-06 22:00:55.264511\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\"}", "{\"ID\": \"v3.19:sys_vfork:0\", \"date\": \"2017-04-06 22:00:55.264511\", \"text\": \"UAR_Leak 1: (not possible)\\nUAR_Leak 2: (not possible)\\nUAR_Leak 3: (not possible)\\nUAR_Leak 4: (not possible)\"}", "{\"ID\": \"v4.2:sys_accept:0\", \"date\": \"2017-04-09 18:09:45.758974\", \"text\": \"UAF_Leak4: (not possible)\\n\\neach path frees the allocated memory. (why never-free reported?)\"}", "{\"ID\": \"v4.2:sys_accept:0\", \"date\": \"2017-04-09 18:09:45.758974\", \"text\": \"UAF_Leak4: (not possible)\\n\\neach path frees the allocated memory. (why never-free reported?)\"}", "{\"ID\": \"v4.2:sys_accept:0\", \"date\": \"2017-04-09 18:09:45.758974\", \"text\": \"UAF_Leak4: (not possible)\\n\\neach path frees the allocated memory. (why never-free reported?)\"}", "{\"ID\": \"v4.2:sys_accept:0\", \"date\": \"2017-04-09 18:09:45.758974\", \"text\": \"UAF_Leak4: (not possible)\\n\\neach path frees the allocated memory. (why never-free reported?)\"}", "{\"ID\": \"v4.2:sys_accept:0\", \"date\": \"2017-04-09 18:09:45.758974\", \"text\": \"UAF_Leak4: (not possible)\\n\\neach path frees the allocated memory. (why never-free reported?)\"}", "{\"ID\": \"v4.2:sys_accept:0\", \"date\": \"2017-04-09 18:09:45.758974\", \"text\": \"UAF_Leak4: (not possible)\\n\\neach path frees the allocated memory. (why never-free reported?)\"}", "{\"ID\": \"v4.2:sys_accept:0\", \"date\": \"2017-04-09 18:09:45.758974\", \"text\": \"UAF_Leak4: (not possible)\\n\\neach path frees the allocated memory. (why never-free reported?)\"}", "{\"ID\": \"v4.2:sys_ioctl:0\", \"date\": \"2017-04-10 00:05:47.174008\", \"text\": \"UAR_Leak1: (not possible)\\nUAR_Leak2: (not possible)\\n\\nWill end at ln. 863\"}", "{\"ID\": \"v4.2:sys_ioctl:0\", \"date\": \"2017-04-10 00:05:47.174008\", \"text\": \"UAR_Leak1: (not possible)\\nUAR_Leak2: (not possible)\\n\\nWill end at ln. 863\"}", "{\"ID\": \"v4.2:sys_ioctl:0\", \"date\": \"2017-04-10 00:05:47.174008\", \"text\": \"UAR_Leak1: (not possible)\\nUAR_Leak2: (not possible)\\n\\nWill end at ln. 863\"}", "{\"ID\": \"v4.2:sys_ioctl:0\", \"date\": \"2017-04-10 00:05:47.174008\", \"text\": \"UAR_Leak1: (not possible)\\nUAR_Leak2: (not possible)\\n\\nWill end at ln. 863\"}", "{\"ID\": \"v4.2:sys_ioctl:0\", \"date\": \"2017-04-10 00:05:47.174008\", \"text\": \"UAR_Leak1: (not possible)\\nUAR_Leak2: (not possible)\\n\\nWill end at ln. 863\"}", "{\"ID\": \"v4.2:sys_ioctl:0\", \"date\": \"2017-04-10 00:05:47.174008\", \"text\": \"UAR_Leak1: (not possible)\\nUAR_Leak2: (not possible)\\n\\nWill end at ln. 863\"}", "{\"ID\": \"v4.2:sys_ioctl:0\", \"date\": \"2017-04-10 00:05:47.174008\", \"text\": \"UAR_Leak1: (not possible)\\nUAR_Leak2: (not possible)\\n\\nWill end at ln. 863\"}", "{\"ID\": \"v4.2:sys_keyctl:0\", \"date\": \"2017-04-10 00:25:55.647920\", \"text\": \"UAF_Leak4: (possible)\\n\\nIt might be possible that 'oldwork' and 'newwork' are both valid (doublefree) or both null (use-after-free)\"}", "{\"ID\": \"v4.2:sys_keyctl:1\", \"date\": \"2017-04-10 01:08:08.375255\", \"text\": \"In function 'call_sbin_request_key' 'put_cred' is called, but cred is still in use afterwards.\"}", "{\"ID\": \"v4.2:sys_keyctl:2\", \"date\": \"2017-04-10 01:28:35.996804\", \"text\": \"UAF_Leak14: (possible)\\n\\nThe object is added to a hash_table, therefore it will most likely be removed.\"}", "{\"ID\": \"v4.2:sys_keyctl:0\", \"date\": \"2017-04-10 00:25:55.647920\", \"text\": \"UAF_Leak4: (possible)\\n\\nIt might be possible that 'oldwork' and 'newwork' are both valid (doublefree) or both null (use-after-free)\"}", "{\"ID\": \"v4.2:sys_keyctl:1\", \"date\": \"2017-04-10 01:08:08.375255\", \"text\": \"In function 'call_sbin_request_key' 'put_cred' is called, but cred is still in use afterwards.\"}", "{\"ID\": \"v4.2:sys_keyctl:2\", \"date\": \"2017-04-10 01:28:35.996804\", \"text\": \"UAF_Leak14: (possible)\\n\\nThe object is added to a hash_table, therefore it will most likely be removed.\"}", "{\"ID\": \"v4.2:sys_keyctl:0\", \"date\": \"2017-04-10 00:25:55.647920\", \"text\": \"UAF_Leak4: (possible)\\n\\nIt might be possible that 'oldwork' and 'newwork' are both valid (doublefree) or both null (use-after-free)\"}", "{\"ID\": \"v4.2:sys_keyctl:1\", \"date\": \"2017-04-10 01:08:08.375255\", \"text\": \"In function 'call_sbin_request_key' 'put_cred' is called, but cred is still in use afterwards.\"}", "{\"ID\": \"v4.2:sys_keyctl:2\", \"date\": \"2017-04-10 01:28:35.996804\", \"text\": \"UAF_Leak14: (possible)\\n\\nThe object is added to a hash_table, therefore it will most likely be removed.\"}", "{\"ID\": \"v4.2:sys_keyctl:0\", \"date\": \"2017-04-10 00:25:55.647920\", \"text\": \"UAF_Leak4: (possible)\\n\\nIt might be possible that 'oldwork' and 'newwork' are both valid (doublefree) or both null (use-after-free)\"}", "{\"ID\": \"v4.2:sys_keyctl:1\", \"date\": \"2017-04-10 01:08:08.375255\", \"text\": \"In function 'call_sbin_request_key' 'put_cred' is called, but cred is still in use afterwards.\"}", "{\"ID\": \"v4.2:sys_keyctl:2\", \"date\": \"2017-04-10 01:28:35.996804\", \"text\": \"UAF_Leak14: (possible)\\n\\nThe object is added to a hash_table, therefore it will most likely be removed.\"}", "{\"ID\": \"v4.2:sys_keyctl:0\", \"date\": \"2017-04-10 00:25:55.647920\", \"text\": \"UAF_Leak4: (possible)\\n\\nIt might be possible that 'oldwork' and 'newwork' are both valid (doublefree) or both null (use-after-free)\"}", "{\"ID\": \"v4.2:sys_keyctl:1\", \"date\": \"2017-04-10 01:08:08.375255\", \"text\": \"In function 'call_sbin_request_key' 'put_cred' is called, but cred is still in use afterwards.\"}", "{\"ID\": \"v4.2:sys_keyctl:2\", \"date\": \"2017-04-10 01:28:35.996804\", \"text\": \"UAF_Leak14: (possible)\\n\\nThe object is added to a hash_table, therefore it will most likely be removed.\"}", "{\"ID\": \"v4.2:sys_keyctl:0\", \"date\": \"2017-04-10 00:25:55.647920\", \"text\": \"UAF_Leak4: (possible)\\n\\nIt might be possible that 'oldwork' and 'newwork' are both valid (doublefree) or both null (use-after-free)\"}", "{\"ID\": \"v4.2:sys_keyctl:1\", \"date\": \"2017-04-10 01:08:08.375255\", \"text\": \"In function 'call_sbin_request_key' 'put_cred' is called, but cred is still in use afterwards.\"}", "{\"ID\": \"v4.2:sys_keyctl:2\", \"date\": \"2017-04-10 01:28:35.996804\", \"text\": \"UAF_Leak14: (possible)\\n\\nThe object is added to a hash_table, therefore it will most likely be removed.\"}", "{\"ID\": \"v4.2:sys_keyctl:0\", \"date\": \"2017-04-10 00:25:55.647920\", \"text\": \"UAF_Leak4: (possible)\\n\\nIt might be possible that 'oldwork' and 'newwork' are both valid (doublefree) or both null (use-after-free)\"}", "{\"ID\": \"v4.2:sys_keyctl:1\", \"date\": \"2017-04-10 01:08:08.375255\", \"text\": \"In function 'call_sbin_request_key' 'put_cred' is called, but cred is still in use afterwards.\"}", "{\"ID\": \"v4.2:sys_keyctl:2\", \"date\": \"2017-04-10 01:28:35.996804\", \"text\": \"UAF_Leak14: (possible)\\n\\nThe object is added to a hash_table, therefore it will most likely be removed.\"}", "{\"ID\": \"v4.2:sys_mmap:0\", \"date\": \"2017-04-10 09:37:33.106015\", \"text\": \"UAR_Leak1: (not possible)\\n\\n'wait is added to a list. It should be freed before the function returns.\"}", "{\"ID\": \"v4.2:sys_mmap:1\", \"date\": \"2017-04-10 09:38:57.807314\", \"text\": \"same for UAR_Leak2 and UAR_Leak3\"}", "{\"ID\": \"v4.2:sys_mmap:0\", \"date\": \"2017-04-10 09:37:33.106015\", \"text\": \"UAR_Leak1: (not possible)\\n\\n'wait is added to a list. It should be freed before the function returns.\"}", "{\"ID\": \"v4.2:sys_mmap:1\", \"date\": \"2017-04-10 09:38:57.807314\", \"text\": \"same for UAR_Leak2 and UAR_Leak3\"}", "{\"ID\": \"v4.2:sys_mmap:0\", \"date\": \"2017-04-10 09:37:33.106015\", \"text\": \"UAR_Leak1: (not possible)\\n\\n'wait is added to a list. It should be freed before the function returns.\"}", "{\"ID\": \"v4.2:sys_mmap:1\", \"date\": \"2017-04-10 09:38:57.807314\", \"text\": \"same for UAR_Leak2 and UAR_Leak3\"}", "{\"ID\": \"v4.2:sys_mmap:0\", \"date\": \"2017-04-10 09:37:33.106015\", \"text\": \"UAR_Leak1: (not possible)\\n\\n'wait is added to a list. It should be freed before the function returns.\"}", "{\"ID\": \"v4.2:sys_mmap:1\", \"date\": \"2017-04-10 09:38:57.807314\", \"text\": \"same for UAR_Leak2 and UAR_Leak3\"}", "{\"ID\": \"v4.2:sys_mmap:0\", \"date\": \"2017-04-10 09:37:33.106015\", \"text\": \"UAR_Leak1: (not possible)\\n\\n'wait is added to a list. It should be freed before the function returns.\"}", "{\"ID\": \"v4.2:sys_mmap:1\", \"date\": \"2017-04-10 09:38:57.807314\", \"text\": \"same for UAR_Leak2 and UAR_Leak3\"}", "{\"ID\": \"v4.2:sys_mmap:0\", \"date\": \"2017-04-10 09:37:33.106015\", \"text\": \"UAR_Leak1: (not possible)\\n\\n'wait is added to a list. It should be freed before the function returns.\"}", "{\"ID\": \"v4.2:sys_mmap:1\", \"date\": \"2017-04-10 09:38:57.807314\", \"text\": \"same for UAR_Leak2 and UAR_Leak3\"}", "{\"ID\": \"v4.2:sys_mmap:0\", \"date\": \"2017-04-10 09:37:33.106015\", \"text\": \"UAR_Leak1: (not possible)\\n\\n'wait is added to a list. It should be freed before the function returns.\"}", "{\"ID\": \"v4.2:sys_mmap:1\", \"date\": \"2017-04-10 09:38:57.807314\", \"text\": \"same for UAR_Leak2 and UAR_Leak3\"}", "{\"ID\": \"v4.2:sys_recvmmsg:0\", \"date\": \"2017-04-24 10:30:00.741153\", \"text\": \"UAR 2: (possible)\\nif 'sock_recvmsg_nosec ' or  'sock_recvmsg' don't remove 'iov' from 'msg_sys->msg_iter'\"}", "{\"ID\": \"v4.6:sys_io_submit:0\", \"date\": \"2017-04-11 13:13:02.362268\", \"text\": \"Leak 11: (possible)\"}", "{\"ID\": \"v4.6:sys_io_submit:0\", \"date\": \"2017-04-11 13:13:02.362268\", \"text\": \"Leak 11: (possible)\"}", "{\"ID\": \"v4.6:sys_io_submit:0\", \"date\": \"2017-04-11 13:13:02.362268\", \"text\": \"Leak 11: (possible)\"}", "{\"ID\": \"v4.6:sys_io_submit:0\", \"date\": \"2017-04-11 13:13:02.362268\", \"text\": \"Leak 11: (possible)\"}", "{\"ID\": \"v4.6:sys_io_submit:0\", \"date\": \"2017-04-11 13:13:02.362268\", \"text\": \"Leak 11: (possible)\"}", "{\"ID\": \"v4.6:sys_io_submit:0\", \"date\": \"2017-04-11 13:13:02.362268\", \"text\": \"Leak 11: (possible)\"}", "{\"ID\": \"v4.6:sys_io_submit:0\", \"date\": \"2017-04-11 13:13:02.362268\", \"text\": \"Leak 11: (possible)\"}", "{\"ID\": \"v4.6:sys_mmap:0\", \"date\": \"2017-04-21 22:15:05.839238\", \"text\": \"DFree 1: (not possible)\\n Would be a bug if get_file(file) in 'mmap_region' wouldn't be called.\\nfput in 'SYSC_mmap_pgoff' and a second in 'mmap_region'\"}", "{\"ID\": \"v4.6:sys_mmap:0\", \"date\": \"2017-04-21 22:15:05.839238\", \"text\": \"DFree 1: (not possible)\\n Would be a bug if get_file(file) in 'mmap_region' wouldn't be called.\\nfput in 'SYSC_mmap_pgoff' and a second in 'mmap_region'\"}", "{\"ID\": \"v4.6:sys_mmap:0\", \"date\": \"2017-04-21 22:15:05.839238\", \"text\": \"DFree 1: (not possible)\\n Would be a bug if get_file(file) in 'mmap_region' wouldn't be called.\\nfput in 'SYSC_mmap_pgoff' and a second in 'mmap_region'\"}", "{\"ID\": \"v4.6:sys_mmap:0\", \"date\": \"2017-04-21 22:15:05.839238\", \"text\": \"DFree 1: (not possible)\\n Would be a bug if get_file(file) in 'mmap_region' wouldn't be called.\\nfput in 'SYSC_mmap_pgoff' and a second in 'mmap_region'\"}", "{\"ID\": \"v4.6:sys_mmap:0\", \"date\": \"2017-04-21 22:15:05.839238\", \"text\": \"DFree 1: (not possible)\\n Would be a bug if get_file(file) in 'mmap_region' wouldn't be called.\\nfput in 'SYSC_mmap_pgoff' and a second in 'mmap_region'\"}", "{\"ID\": \"v4.6:sys_mmap:0\", \"date\": \"2017-04-21 22:15:05.839238\", \"text\": \"DFree 1: (not possible)\\n Would be a bug if get_file(file) in 'mmap_region' wouldn't be called.\\nfput in 'SYSC_mmap_pgoff' and a second in 'mmap_region'\"}", "{\"ID\": \"v4.6:sys_mmap:0\", \"date\": \"2017-04-21 22:15:05.839238\", \"text\": \"DFree 1: (not possible)\\n Would be a bug if get_file(file) in 'mmap_region' wouldn't be called.\\nfput in 'SYSC_mmap_pgoff' and a second in 'mmap_region'\"}", "{\"ID\": \"v4.10:sys_accept:0\", \"date\": \"2017-04-07 18:16:09.033839\", \"text\": \"UAF_Leak1: (possible)\\n\\n 'anon_vma_chain_link(dst, avc, anon_vma)' assignes 'avc' to 'anon_vma', but seems to be intentional\"}", "{\"ID\": \"v4.10:sys_accept:1\", \"date\": \"2017-04-07 18:19:29.447930\", \"text\": \"UAF_Leak2: (possible)\\n\\nThe allocated memory is assigned to 'tp->func'. Couldn't find any free corresponding to the allocation, but this case seems also be intended. \"}", "{\"ID\": \"v4.10:sys_accept:2\", \"date\": \"2017-04-07 18:35:46.044925\", \"text\": \"UAF_Leak3: (possible)\\n\\nrcu_assign_pointer(queue->rps_flow_table, table) assigns 'table' to 'queue->rps_flow_table'. \\nCouldn't find any free corresponding to the allocation, but this case seems also be intended. \"}", "{\"ID\": \"v4.10:sys_accept:3\", \"date\": \"2017-04-07 19:37:43.895837\", \"text\": \"UAF_Leak4: (possible)\\n\\nrhashtable_rehash_attach(ht, tbl, new_tbl); assigns 'new_tbl' to 'tbl->future_tbl'.\\n---------------------------------\\nExtra: Function 'rhashtable_rehash_attach' gets 'struct rhashtable *ht' but it is never used inside the function. \"}", "{\"ID\": \"v4.10:sys_accept:4\", \"date\": \"2017-04-07 19:41:31.672587\", \"text\": \"UAF_Leak5: (possible)\\n\\nsimilar as above\"}", "{\"ID\": \"v4.10:sys_accept:5\", \"date\": \"2017-04-07 19:42:34.075904\", \"text\": \"UAF_Leak6: (possible) \\n\\nSame as leak1\"}", "{\"ID\": \"v4.10:sys_accept:6\", \"date\": \"2017-04-07 21:19:15.938343\", \"text\": \"UAF_Leak9: (possible)\\n\\nSimilar to leak2\\n\\nUAF_Leak10: (possible)\\n\\nnetfilter_log_sysctl_init\\nregister_net_sysctl\\ninit_header (table assigned to head->ctl_table and head->ctl_table_arg)\\n\\n\\nnetfilter_log_sysctl_init seems to bee some kind of \\\"initcall\\\". The allocations should be freed if the exit function is called.\\n\\nAt ln 500: might be a risky check:  \\nif (!net_eq(net, &init_net))\\n       kfree(table);\"}", "{\"ID\": \"v4.10:sys_accept:7\", \"date\": \"2017-04-08 01:14:02.266712\", \"text\": \"DFree_Leak1: (?)\\nDFree_Leak2: (?)\\n\\ncouldn't find any double-free.\\n\"}", "{\"ID\": \"v4.10:sys_accept:0\", \"date\": \"2017-04-07 18:16:09.033839\", \"text\": \"UAF_Leak1: (possible)\\n\\n 'anon_vma_chain_link(dst, avc, anon_vma)' assignes 'avc' to 'anon_vma', but seems to be intentional\"}", "{\"ID\": \"v4.10:sys_accept:1\", \"date\": \"2017-04-07 18:19:29.447930\", \"text\": \"UAF_Leak2: (possible)\\n\\nThe allocated memory is assigned to 'tp->func'. Couldn't find any free corresponding to the allocation, but this case seems also be intended. \"}", "{\"ID\": \"v4.10:sys_accept:2\", \"date\": \"2017-04-07 18:35:46.044925\", \"text\": \"UAF_Leak3: (possible)\\n\\nrcu_assign_pointer(queue->rps_flow_table, table) assigns 'table' to 'queue->rps_flow_table'. \\nCouldn't find any free corresponding to the allocation, but this case seems also be intended. \"}", "{\"ID\": \"v4.10:sys_accept:3\", \"date\": \"2017-04-07 19:37:43.895837\", \"text\": \"UAF_Leak4: (possible)\\n\\nrhashtable_rehash_attach(ht, tbl, new_tbl); assigns 'new_tbl' to 'tbl->future_tbl'.\\n---------------------------------\\nExtra: Function 'rhashtable_rehash_attach' gets 'struct rhashtable *ht' but it is never used inside the function. \"}", "{\"ID\": \"v4.10:sys_accept:4\", \"date\": \"2017-04-07 19:41:31.672587\", \"text\": \"UAF_Leak5: (possible)\\n\\nsimilar as above\"}", "{\"ID\": \"v4.10:sys_accept:5\", \"date\": \"2017-04-07 19:42:34.075904\", \"text\": \"UAF_Leak6: (possible) \\n\\nSame as leak1\"}", "{\"ID\": \"v4.10:sys_accept:6\", \"date\": \"2017-04-07 21:19:15.938343\", \"text\": \"UAF_Leak9: (possible)\\n\\nSimilar to leak2\\n\\nUAF_Leak10: (possible)\\n\\nnetfilter_log_sysctl_init\\nregister_net_sysctl\\ninit_header (table assigned to head->ctl_table and head->ctl_table_arg)\\n\\n\\nnetfilter_log_sysctl_init seems to bee some kind of \\\"initcall\\\". The allocations should be freed if the exit function is called.\\n\\nAt ln 500: might be a risky check:  \\nif (!net_eq(net, &init_net))\\n       kfree(table);\"}", "{\"ID\": \"v4.10:sys_accept:7\", \"date\": \"2017-04-08 01:14:02.266712\", \"text\": \"DFree_Leak1: (?)\\nDFree_Leak2: (?)\\n\\ncouldn't find any double-free.\\n\"}", "{\"ID\": \"v4.10:sys_accept:0\", \"date\": \"2017-04-07 18:16:09.033839\", \"text\": \"UAF_Leak1: (possible)\\n\\n 'anon_vma_chain_link(dst, avc, anon_vma)' assignes 'avc' to 'anon_vma', but seems to be intentional\"}", "{\"ID\": \"v4.10:sys_accept:1\", \"date\": \"2017-04-07 18:19:29.447930\", \"text\": \"UAF_Leak2: (possible)\\n\\nThe allocated memory is assigned to 'tp->func'. Couldn't find any free corresponding to the allocation, but this case seems also be intended. \"}", "{\"ID\": \"v4.10:sys_accept:2\", \"date\": \"2017-04-07 18:35:46.044925\", \"text\": \"UAF_Leak3: (possible)\\n\\nrcu_assign_pointer(queue->rps_flow_table, table) assigns 'table' to 'queue->rps_flow_table'. \\nCouldn't find any free corresponding to the allocation, but this case seems also be intended. \"}", "{\"ID\": \"v4.10:sys_accept:3\", \"date\": \"2017-04-07 19:37:43.895837\", \"text\": \"UAF_Leak4: (possible)\\n\\nrhashtable_rehash_attach(ht, tbl, new_tbl); assigns 'new_tbl' to 'tbl->future_tbl'.\\n---------------------------------\\nExtra: Function 'rhashtable_rehash_attach' gets 'struct rhashtable *ht' but it is never used inside the function. \"}", "{\"ID\": \"v4.10:sys_accept:4\", \"date\": \"2017-04-07 19:41:31.672587\", \"text\": \"UAF_Leak5: (possible)\\n\\nsimilar as above\"}", "{\"ID\": \"v4.10:sys_accept:5\", \"date\": \"2017-04-07 19:42:34.075904\", \"text\": \"UAF_Leak6: (possible) \\n\\nSame as leak1\"}", "{\"ID\": \"v4.10:sys_accept:6\", \"date\": \"2017-04-07 21:19:15.938343\", \"text\": \"UAF_Leak9: (possible)\\n\\nSimilar to leak2\\n\\nUAF_Leak10: (possible)\\n\\nnetfilter_log_sysctl_init\\nregister_net_sysctl\\ninit_header (table assigned to head->ctl_table and head->ctl_table_arg)\\n\\n\\nnetfilter_log_sysctl_init seems to bee some kind of \\\"initcall\\\". The allocations should be freed if the exit function is called.\\n\\nAt ln 500: might be a risky check:  \\nif (!net_eq(net, &init_net))\\n       kfree(table);\"}", "{\"ID\": \"v4.10:sys_accept:7\", \"date\": \"2017-04-08 01:14:02.266712\", \"text\": \"DFree_Leak1: (?)\\nDFree_Leak2: (?)\\n\\ncouldn't find any double-free.\\n\"}", "{\"ID\": \"v4.10:sys_accept:0\", \"date\": \"2017-04-07 18:16:09.033839\", \"text\": \"UAF_Leak1: (possible)\\n\\n 'anon_vma_chain_link(dst, avc, anon_vma)' assignes 'avc' to 'anon_vma', but seems to be intentional\"}", "{\"ID\": \"v4.10:sys_accept:1\", \"date\": \"2017-04-07 18:19:29.447930\", \"text\": \"UAF_Leak2: (possible)\\n\\nThe allocated memory is assigned to 'tp->func'. Couldn't find any free corresponding to the allocation, but this case seems also be intended. \"}", "{\"ID\": \"v4.10:sys_accept:2\", \"date\": \"2017-04-07 18:35:46.044925\", \"text\": \"UAF_Leak3: (possible)\\n\\nrcu_assign_pointer(queue->rps_flow_table, table) assigns 'table' to 'queue->rps_flow_table'. \\nCouldn't find any free corresponding to the allocation, but this case seems also be intended. \"}", "{\"ID\": \"v4.10:sys_accept:3\", \"date\": \"2017-04-07 19:37:43.895837\", \"text\": \"UAF_Leak4: (possible)\\n\\nrhashtable_rehash_attach(ht, tbl, new_tbl); assigns 'new_tbl' to 'tbl->future_tbl'.\\n---------------------------------\\nExtra: Function 'rhashtable_rehash_attach' gets 'struct rhashtable *ht' but it is never used inside the function. \"}", "{\"ID\": \"v4.10:sys_accept:4\", \"date\": \"2017-04-07 19:41:31.672587\", \"text\": \"UAF_Leak5: (possible)\\n\\nsimilar as above\"}", "{\"ID\": \"v4.10:sys_accept:5\", \"date\": \"2017-04-07 19:42:34.075904\", \"text\": \"UAF_Leak6: (possible) \\n\\nSame as leak1\"}", "{\"ID\": \"v4.10:sys_accept:6\", \"date\": \"2017-04-07 21:19:15.938343\", \"text\": \"UAF_Leak9: (possible)\\n\\nSimilar to leak2\\n\\nUAF_Leak10: (possible)\\n\\nnetfilter_log_sysctl_init\\nregister_net_sysctl\\ninit_header (table assigned to head->ctl_table and head->ctl_table_arg)\\n\\n\\nnetfilter_log_sysctl_init seems to bee some kind of \\\"initcall\\\". The allocations should be freed if the exit function is called.\\n\\nAt ln 500: might be a risky check:  \\nif (!net_eq(net, &init_net))\\n       kfree(table);\"}", "{\"ID\": \"v4.10:sys_accept:7\", \"date\": \"2017-04-08 01:14:02.266712\", \"text\": \"DFree_Leak1: (?)\\nDFree_Leak2: (?)\\n\\ncouldn't find any double-free.\\n\"}", "{\"ID\": \"v4.10:sys_accept:0\", \"date\": \"2017-04-07 18:16:09.033839\", \"text\": \"UAF_Leak1: (possible)\\n\\n 'anon_vma_chain_link(dst, avc, anon_vma)' assignes 'avc' to 'anon_vma', but seems to be intentional\"}", "{\"ID\": \"v4.10:sys_accept:1\", \"date\": \"2017-04-07 18:19:29.447930\", \"text\": \"UAF_Leak2: (possible)\\n\\nThe allocated memory is assigned to 'tp->func'. Couldn't find any free corresponding to the allocation, but this case seems also be intended. \"}", "{\"ID\": \"v4.10:sys_accept:2\", \"date\": \"2017-04-07 18:35:46.044925\", \"text\": \"UAF_Leak3: (possible)\\n\\nrcu_assign_pointer(queue->rps_flow_table, table) assigns 'table' to 'queue->rps_flow_table'. \\nCouldn't find any free corresponding to the allocation, but this case seems also be intended. \"}", "{\"ID\": \"v4.10:sys_accept:3\", \"date\": \"2017-04-07 19:37:43.895837\", \"text\": \"UAF_Leak4: (possible)\\n\\nrhashtable_rehash_attach(ht, tbl, new_tbl); assigns 'new_tbl' to 'tbl->future_tbl'.\\n---------------------------------\\nExtra: Function 'rhashtable_rehash_attach' gets 'struct rhashtable *ht' but it is never used inside the function. \"}", "{\"ID\": \"v4.10:sys_accept:4\", \"date\": \"2017-04-07 19:41:31.672587\", \"text\": \"UAF_Leak5: (possible)\\n\\nsimilar as above\"}", "{\"ID\": \"v4.10:sys_accept:5\", \"date\": \"2017-04-07 19:42:34.075904\", \"text\": \"UAF_Leak6: (possible) \\n\\nSame as leak1\"}", "{\"ID\": \"v4.10:sys_accept:6\", \"date\": \"2017-04-07 21:19:15.938343\", \"text\": \"UAF_Leak9: (possible)\\n\\nSimilar to leak2\\n\\nUAF_Leak10: (possible)\\n\\nnetfilter_log_sysctl_init\\nregister_net_sysctl\\ninit_header (table assigned to head->ctl_table and head->ctl_table_arg)\\n\\n\\nnetfilter_log_sysctl_init seems to bee some kind of \\\"initcall\\\". The allocations should be freed if the exit function is called.\\n\\nAt ln 500: might be a risky check:  \\nif (!net_eq(net, &init_net))\\n       kfree(table);\"}", "{\"ID\": \"v4.10:sys_accept:7\", \"date\": \"2017-04-08 01:14:02.266712\", \"text\": \"DFree_Leak1: (?)\\nDFree_Leak2: (?)\\n\\ncouldn't find any double-free.\\n\"}", "{\"ID\": \"v4.10:sys_accept:0\", \"date\": \"2017-04-07 18:16:09.033839\", \"text\": \"UAF_Leak1: (possible)\\n\\n 'anon_vma_chain_link(dst, avc, anon_vma)' assignes 'avc' to 'anon_vma', but seems to be intentional\"}", "{\"ID\": \"v4.10:sys_accept:1\", \"date\": \"2017-04-07 18:19:29.447930\", \"text\": \"UAF_Leak2: (possible)\\n\\nThe allocated memory is assigned to 'tp->func'. Couldn't find any free corresponding to the allocation, but this case seems also be intended. \"}", "{\"ID\": \"v4.10:sys_accept:2\", \"date\": \"2017-04-07 18:35:46.044925\", \"text\": \"UAF_Leak3: (possible)\\n\\nrcu_assign_pointer(queue->rps_flow_table, table) assigns 'table' to 'queue->rps_flow_table'. \\nCouldn't find any free corresponding to the allocation, but this case seems also be intended. \"}", "{\"ID\": \"v4.10:sys_accept:3\", \"date\": \"2017-04-07 19:37:43.895837\", \"text\": \"UAF_Leak4: (possible)\\n\\nrhashtable_rehash_attach(ht, tbl, new_tbl); assigns 'new_tbl' to 'tbl->future_tbl'.\\n---------------------------------\\nExtra: Function 'rhashtable_rehash_attach' gets 'struct rhashtable *ht' but it is never used inside the function. \"}", "{\"ID\": \"v4.10:sys_accept:4\", \"date\": \"2017-04-07 19:41:31.672587\", \"text\": \"UAF_Leak5: (possible)\\n\\nsimilar as above\"}", "{\"ID\": \"v4.10:sys_accept:5\", \"date\": \"2017-04-07 19:42:34.075904\", \"text\": \"UAF_Leak6: (possible) \\n\\nSame as leak1\"}", "{\"ID\": \"v4.10:sys_accept:6\", \"date\": \"2017-04-07 21:19:15.938343\", \"text\": \"UAF_Leak9: (possible)\\n\\nSimilar to leak2\\n\\nUAF_Leak10: (possible)\\n\\nnetfilter_log_sysctl_init\\nregister_net_sysctl\\ninit_header (table assigned to head->ctl_table and head->ctl_table_arg)\\n\\n\\nnetfilter_log_sysctl_init seems to bee some kind of \\\"initcall\\\". The allocations should be freed if the exit function is called.\\n\\nAt ln 500: might be a risky check:  \\nif (!net_eq(net, &init_net))\\n       kfree(table);\"}", "{\"ID\": \"v4.10:sys_accept:7\", \"date\": \"2017-04-08 01:14:02.266712\", \"text\": \"DFree_Leak1: (?)\\nDFree_Leak2: (?)\\n\\ncouldn't find any double-free.\\n\"}", "{\"ID\": \"v4.10:sys_accept:0\", \"date\": \"2017-04-07 18:16:09.033839\", \"text\": \"UAF_Leak1: (possible)\\n\\n 'anon_vma_chain_link(dst, avc, anon_vma)' assignes 'avc' to 'anon_vma', but seems to be intentional\"}", "{\"ID\": \"v4.10:sys_accept:1\", \"date\": \"2017-04-07 18:19:29.447930\", \"text\": \"UAF_Leak2: (possible)\\n\\nThe allocated memory is assigned to 'tp->func'. Couldn't find any free corresponding to the allocation, but this case seems also be intended. \"}", "{\"ID\": \"v4.10:sys_accept:2\", \"date\": \"2017-04-07 18:35:46.044925\", \"text\": \"UAF_Leak3: (possible)\\n\\nrcu_assign_pointer(queue->rps_flow_table, table) assigns 'table' to 'queue->rps_flow_table'. \\nCouldn't find any free corresponding to the allocation, but this case seems also be intended. \"}", "{\"ID\": \"v4.10:sys_accept:3\", \"date\": \"2017-04-07 19:37:43.895837\", \"text\": \"UAF_Leak4: (possible)\\n\\nrhashtable_rehash_attach(ht, tbl, new_tbl); assigns 'new_tbl' to 'tbl->future_tbl'.\\n---------------------------------\\nExtra: Function 'rhashtable_rehash_attach' gets 'struct rhashtable *ht' but it is never used inside the function. \"}", "{\"ID\": \"v4.10:sys_accept:4\", \"date\": \"2017-04-07 19:41:31.672587\", \"text\": \"UAF_Leak5: (possible)\\n\\nsimilar as above\"}", "{\"ID\": \"v4.10:sys_accept:5\", \"date\": \"2017-04-07 19:42:34.075904\", \"text\": \"UAF_Leak6: (possible) \\n\\nSame as leak1\"}", "{\"ID\": \"v4.10:sys_accept:6\", \"date\": \"2017-04-07 21:19:15.938343\", \"text\": \"UAF_Leak9: (possible)\\n\\nSimilar to leak2\\n\\nUAF_Leak10: (possible)\\n\\nnetfilter_log_sysctl_init\\nregister_net_sysctl\\ninit_header (table assigned to head->ctl_table and head->ctl_table_arg)\\n\\n\\nnetfilter_log_sysctl_init seems to bee some kind of \\\"initcall\\\". The allocations should be freed if the exit function is called.\\n\\nAt ln 500: might be a risky check:  \\nif (!net_eq(net, &init_net))\\n       kfree(table);\"}", "{\"ID\": \"v4.10:sys_accept:7\", \"date\": \"2017-04-08 01:14:02.266712\", \"text\": \"DFree_Leak1: (?)\\nDFree_Leak2: (?)\\n\\ncouldn't find any double-free.\\n\"}", "{\"ID\": \"v4.10:sys_connect:0\", \"date\": \"2017-04-08 10:01:44.685469\", \"text\": \"UAF_Leak1: (not possible)\\n\\nis inside an initcall\\n\\n\"}", "{\"ID\": \"v4.10:sys_connect:0\", \"date\": \"2017-04-08 10:01:44.685469\", \"text\": \"UAF_Leak1: (not possible)\\n\\nis inside an initcall\\n\\n\"}", "{\"ID\": \"v4.10:sys_connect:0\", \"date\": \"2017-04-08 10:01:44.685469\", \"text\": \"UAF_Leak1: (not possible)\\n\\nis inside an initcall\\n\\n\"}", "{\"ID\": \"v4.10:sys_connect:0\", \"date\": \"2017-04-08 10:01:44.685469\", \"text\": \"UAF_Leak1: (not possible)\\n\\nis inside an initcall\\n\\n\"}", "{\"ID\": \"v4.10:sys_connect:0\", \"date\": \"2017-04-08 10:01:44.685469\", \"text\": \"UAF_Leak1: (not possible)\\n\\nis inside an initcall\\n\\n\"}", "{\"ID\": \"v4.10:sys_connect:0\", \"date\": \"2017-04-08 10:01:44.685469\", \"text\": \"UAF_Leak1: (not possible)\\n\\nis inside an initcall\\n\\n\"}", "{\"ID\": \"v4.10:sys_connect:0\", \"date\": \"2017-04-08 10:01:44.685469\", \"text\": \"UAF_Leak1: (not possible)\\n\\nis inside an initcall\\n\\n\"}", "{\"ID\": \"v4.10:sys_fcntl:0\", \"date\": \"2017-04-21 15:12:33.744027\", \"text\": \"UAR 1: (not possible)\\n '__wait' will be removed from the actual wait_queue\"}", "{\"ID\": \"v4.10:sys_fcntl:0\", \"date\": \"2017-04-21 15:12:33.744027\", \"text\": \"UAR 1: (not possible)\\n '__wait' will be removed from the actual wait_queue\"}", "{\"ID\": \"v4.10:sys_fcntl:0\", \"date\": \"2017-04-21 15:12:33.744027\", \"text\": \"UAR 1: (not possible)\\n '__wait' will be removed from the actual wait_queue\"}", "{\"ID\": \"v4.10:sys_fcntl:0\", \"date\": \"2017-04-21 15:12:33.744027\", \"text\": \"UAR 1: (not possible)\\n '__wait' will be removed from the actual wait_queue\"}", "{\"ID\": \"v4.10:sys_fcntl:0\", \"date\": \"2017-04-21 15:12:33.744027\", \"text\": \"UAR 1: (not possible)\\n '__wait' will be removed from the actual wait_queue\"}", "{\"ID\": \"v4.10:sys_fcntl:0\", \"date\": \"2017-04-21 15:12:33.744027\", \"text\": \"UAR 1: (not possible)\\n '__wait' will be removed from the actual wait_queue\"}", "{\"ID\": \"v4.10:sys_fcntl:0\", \"date\": \"2017-04-21 15:12:33.744027\", \"text\": \"UAR 1: (not possible)\\n '__wait' will be removed from the actual wait_queue\"}", "{\"ID\": \"v4.10:sys_mbind:0\", \"date\": \"2017-04-08 10:11:20.077502\", \"text\": \"UAF_Leak7: (not possible)\\n\\nIs assigned to 'current'\"}", "{\"ID\": \"v4.10:sys_mbind:1\", \"date\": \"2017-04-08 13:55:08.841643\", \"text\": \"UAF_Leak1: (not possible)\\n\\nIt is only true for the 'mpol_new' function, but this is intended.\"}", "{\"ID\": \"v4.10:sys_mbind:0\", \"date\": \"2017-04-08 10:11:20.077502\", \"text\": \"UAF_Leak7: (not possible)\\n\\nIs assigned to 'current'\"}", "{\"ID\": \"v4.10:sys_mbind:1\", \"date\": \"2017-04-08 13:55:08.841643\", \"text\": \"UAF_Leak1: (not possible)\\n\\nIt is only true for the 'mpol_new' function, but this is intended.\"}", "{\"ID\": \"v4.10:sys_mbind:0\", \"date\": \"2017-04-08 10:11:20.077502\", \"text\": \"UAF_Leak7: (not possible)\\n\\nIs assigned to 'current'\"}", "{\"ID\": \"v4.10:sys_mbind:1\", \"date\": \"2017-04-08 13:55:08.841643\", \"text\": \"UAF_Leak1: (not possible)\\n\\nIt is only true for the 'mpol_new' function, but this is intended.\"}", "{\"ID\": \"v4.10:sys_mbind:0\", \"date\": \"2017-04-08 10:11:20.077502\", \"text\": \"UAF_Leak7: (not possible)\\n\\nIs assigned to 'current'\"}", "{\"ID\": \"v4.10:sys_mbind:1\", \"date\": \"2017-04-08 13:55:08.841643\", \"text\": \"UAF_Leak1: (not possible)\\n\\nIt is only true for the 'mpol_new' function, but this is intended.\"}", "{\"ID\": \"v4.10:sys_mbind:0\", \"date\": \"2017-04-08 10:11:20.077502\", \"text\": \"UAF_Leak7: (not possible)\\n\\nIs assigned to 'current'\"}", "{\"ID\": \"v4.10:sys_mbind:1\", \"date\": \"2017-04-08 13:55:08.841643\", \"text\": \"UAF_Leak1: (not possible)\\n\\nIt is only true for the 'mpol_new' function, but this is intended.\"}", "{\"ID\": \"v4.10:sys_mbind:0\", \"date\": \"2017-04-08 10:11:20.077502\", \"text\": \"UAF_Leak7: (not possible)\\n\\nIs assigned to 'current'\"}", "{\"ID\": \"v4.10:sys_mbind:1\", \"date\": \"2017-04-08 13:55:08.841643\", \"text\": \"UAF_Leak1: (not possible)\\n\\nIt is only true for the 'mpol_new' function, but this is intended.\"}", "{\"ID\": \"v4.10:sys_mbind:0\", \"date\": \"2017-04-08 10:11:20.077502\", \"text\": \"UAF_Leak7: (not possible)\\n\\nIs assigned to 'current'\"}", "{\"ID\": \"v4.10:sys_mbind:1\", \"date\": \"2017-04-08 13:55:08.841643\", \"text\": \"UAF_Leak1: (not possible)\\n\\nIt is only true for the 'mpol_new' function, but this is intended.\"}", "{\"ID\": \"v4.10:sys_mknod:0\", \"date\": \"2017-04-21 17:09:46.485798\", \"text\": \"UAR 1-13: (not possible)\\n\\n - \"}", "{\"ID\": \"v4.10:sys_mknod:1\", \"date\": \"2017-04-21 17:10:41.815887\", \"text\": \"'schedule_delayed_work' deletes entry\"}", "{\"ID\": \"v4.10:sys_mknod:0\", \"date\": \"2017-04-21 17:09:46.485798\", \"text\": \"UAR 1-13: (not possible)\\n\\n - \"}", "{\"ID\": \"v4.10:sys_mknod:1\", \"date\": \"2017-04-21 17:10:41.815887\", \"text\": \"'schedule_delayed_work' deletes entry\"}", "{\"ID\": \"v4.10:sys_mknod:0\", \"date\": \"2017-04-21 17:09:46.485798\", \"text\": \"UAR 1-13: (not possible)\\n\\n - \"}", "{\"ID\": \"v4.10:sys_mknod:1\", \"date\": \"2017-04-21 17:10:41.815887\", \"text\": \"'schedule_delayed_work' deletes entry\"}", "{\"ID\": \"v4.10:sys_mknod:0\", \"date\": \"2017-04-21 17:09:46.485798\", \"text\": \"UAR 1-13: (not possible)\\n\\n - \"}", "{\"ID\": \"v4.10:sys_mknod:1\", \"date\": \"2017-04-21 17:10:41.815887\", \"text\": \"'schedule_delayed_work' deletes entry\"}", "{\"ID\": \"v4.10:sys_mknod:0\", \"date\": \"2017-04-21 17:09:46.485798\", \"text\": \"UAR 1-13: (not possible)\\n\\n - \"}", "{\"ID\": \"v4.10:sys_mknod:1\", \"date\": \"2017-04-21 17:10:41.815887\", \"text\": \"'schedule_delayed_work' deletes entry\"}", "{\"ID\": \"v4.10:sys_mknod:0\", \"date\": \"2017-04-21 17:09:46.485798\", \"text\": \"UAR 1-13: (not possible)\\n\\n - \"}", "{\"ID\": \"v4.10:sys_mknod:1\", \"date\": \"2017-04-21 17:10:41.815887\", \"text\": \"'schedule_delayed_work' deletes entry\"}", "{\"ID\": \"v4.10:sys_mknod:0\", \"date\": \"2017-04-21 17:09:46.485798\", \"text\": \"UAR 1-13: (not possible)\\n\\n - \"}", "{\"ID\": \"v4.10:sys_mknod:1\", \"date\": \"2017-04-21 17:10:41.815887\", \"text\": \"'schedule_delayed_work' deletes entry\"}", "{\"ID\": \"v4.10:sys_prctl:0\", \"date\": \"2017-04-08 12:55:17.532024\", \"text\": \"UAF_Leak 12: (not possible)\\n\\nif '__bpf_prog_relase' frees 'fp' correctly this wont be a leak.\"}", "{\"ID\": \"v4.10:sys_prctl:0\", \"date\": \"2017-04-08 12:55:17.532024\", \"text\": \"UAF_Leak 12: (not possible)\\n\\nif '__bpf_prog_relase' frees 'fp' correctly this wont be a leak.\"}", "{\"ID\": \"v4.10:sys_prctl:0\", \"date\": \"2017-04-08 12:55:17.532024\", \"text\": \"UAF_Leak 12: (not possible)\\n\\nif '__bpf_prog_relase' frees 'fp' correctly this wont be a leak.\"}", "{\"ID\": \"v4.10:sys_prctl:0\", \"date\": \"2017-04-08 12:55:17.532024\", \"text\": \"UAF_Leak 12: (not possible)\\n\\nif '__bpf_prog_relase' frees 'fp' correctly this wont be a leak.\"}", "{\"ID\": \"v4.10:sys_prctl:0\", \"date\": \"2017-04-08 12:55:17.532024\", \"text\": \"UAF_Leak 12: (not possible)\\n\\nif '__bpf_prog_relase' frees 'fp' correctly this wont be a leak.\"}", "{\"ID\": \"v4.10:sys_prctl:0\", \"date\": \"2017-04-08 12:55:17.532024\", \"text\": \"UAF_Leak 12: (not possible)\\n\\nif '__bpf_prog_relase' frees 'fp' correctly this wont be a leak.\"}", "{\"ID\": \"v4.10:sys_prctl:0\", \"date\": \"2017-04-08 12:55:17.532024\", \"text\": \"UAF_Leak 12: (not possible)\\n\\nif '__bpf_prog_relase' frees 'fp' correctly this wont be a leak.\"}"]